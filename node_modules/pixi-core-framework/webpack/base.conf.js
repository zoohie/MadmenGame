const fs = require('fs');
const path = require('path');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

const correctDir = path.join(__dirname, '..', '..', '..');
const PATHS = {
    root: correctDir,
    src: path.join(correctDir, 'src'),
    build: path.join(correctDir, 'bin'),
    data: path.join(correctDir, 'data'),
    favicon: path.join(correctDir, 'data', 'favicon', 'favicon.ico'),
};

module.exports = {
    mode: process.env.NODE_ENV || 'development',
    entry: PATHS.src,
    module: {
        rules: [
            {
                test: /\.tsx?$/,
                loaders: ['ts-loader'],
            },
            {
                test: /\.(sa|sc|c)ss$/,
                use: [
                    'style-loader',
                    MiniCssExtractPlugin.loader,
                    {
                        loader: 'css-loader',
                        options: {
                            importLoaders: 1
                        }
                    },
                    'postcss-loader',
                    'sass-loader',
                ],
            },
            // {
            //     test: /\.scss$/,
            //     loaders: ['style-loader', 'raw-loader', 'sass-loader']
            // },
            {
                test: /\.(png|jpg)$/,
                use: "file-loader?name=[path][name][hash].[ext]"
            },
            {
                test: /\.(woff|woff2|eot|ttf|otf)$/,
                loader: 'file-loader'
            },
            // {
            //     test: /\.(ogg|mp3|wav|mpe?g)$/i,
            //     loader: 'file-loader',
            //     options: {
            //         name: '[path][name].[ext]',
            //     },
            // },
            {
                enforce: 'pre',
                test: /\.js$/,
                loader: "source-map-loader"
            },
            {
                enforce: 'pre',
                test: /\.tsx?$/,
                loader: "source-map-loader"
            }
        ]
    },
    resolve: {
        extensions: [".tsx", ".ts", ".js", '.css'],
        alias: {
            '~': 'src',
        }
    },
    externals: {
        pixi: "PIXI",
        paths: PATHS,
        favicon: fs.existsSync(PATHS.favicon) && PATHS.favicon,
    },
};

