import { SlotEventDispatcher } from "../eventDispatcher/SlotEventDispatcher";
/**
 * Action is a main logic structure. It creates promise and resolve after some logic action
 * (e.g. play sound, play movie clip, show image, load assets etc) is finished.
 *
 * Use dispatcher to communicate with mediators and controllers.
 *
 */
export declare abstract class BaseAction {
    protected dispatcher: SlotEventDispatcher;
    protected actions: BaseAction[];
    protected shouldSkip: boolean;
    constructor(...args: any[]);
    /**
     * We dispatch events here for some logic actions (e.g. play sound, play movie clip, show image, load assets etc)
     * and listens about their finish
     */
    abstract execute(): Promise<any>;
    /**
     * End action, remove all listeners if exists
     */
    end(): void;
    skip(): void;
}
