import { getDispatcher } from "./createInstance";
import { LoaderConstants, LoadEvents } from "general-framework";
/**
 * Mediator is a header for views.
 * The Mediator is used to work with actions.
 * Use dispatcher for it.
 *
 */
export class BaseMediator {
    constructor(view) {
        this.dispatcher = getDispatcher(this);
        this.view = view;
        this.addListeners();
    }
    addListeners() {
        this.dispatcher.addListener(LoadEvents.ASSET_LOADED, this.init.bind(this));
        this.dispatcher.addListener(LoadEvents.PROJECT_LOADING_COMPLETE, this.initGeneral.bind(this));
    }
    init(groupID) {
        if (this.view.groupID && this.view.groupID.indexOf(groupID) !== -1 && groupID !== LoaderConstants.GENERAL_PRIORITY) {
            this.view.init();
        }
    }
    initGeneral(groupID) {
        if (this.view.groupID && this.view.groupID.indexOf(groupID) !== -1) {
            this.view.init();
        }
    }
    registerViewListener(uiEvent) {
        this.view.addListener(uiEvent, (args) => {
            this.dispatcher.dispatch(uiEvent, args);
        });
    }
    removeListeners() {
    }
}
//# sourceMappingURL=BaseMediator.js.map