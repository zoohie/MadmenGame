import { IBaseModel } from "./interfaces/IBaseModel";
import { IServerModel } from "../../modules/server/interfaces/IServerModel";
import { SlotEventDispatcher } from "./eventDispatcher/SlotEventDispatcher";
import { IViewComponent } from "../baseView/interfaces/IViewComponent";
import { BaseSpineComponent } from "../baseView/components/BaseSpineComponent";
import { BaseSpineAnimationProjection2d } from "../baseView/components/pixiProjection/BaseSpineAnimationProjection2d";
export declare function createInstance(constructor: Function, args?: any[]): any;
export declare function bindTo(oldConstructor: Function, newConstructor: Function): void;
export declare function bindMediator(mediatorClass: Function, viewClass: Function, layoutID: string, holderID?: string): void;
export declare function getModel(classInstance: any, modelConstructor: Function): IBaseModel;
export declare function addModel(model: IBaseModel): void;
export declare function addServerModel(model: IServerModel): void;
export declare function getDispatcher(instance: any): SlotEventDispatcher;
export declare function getViewComponent(layoutID: string): IViewComponent;
export declare function createNewView(layoutID: string): IViewComponent;
export declare function getSpineClip(spineID: string): BaseSpineComponent;
export declare function getSpineClipProjection2d(spineID: string): BaseSpineAnimationProjection2d;
export declare function freezeApp(): void;
export declare function unfreezeApp(): void;
