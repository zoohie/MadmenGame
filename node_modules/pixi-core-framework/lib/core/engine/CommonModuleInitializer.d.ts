import { ApplicationModule } from "./ApplicationModule";
import { CommonFSMInitializer } from "./CommonFSMInitializer";
export declare class CommonModuleInitializer {
    protected fsmInitializer: CommonFSMInitializer;
    constructor(fsmInitializer: CommonFSMInitializer);
    protected _modules: ApplicationModule[];
    /**
     * Add application logic modules. All new application entities should be
     * created only in module execute() method.
     * Should be overridden in  a game ApplicationModuleInitializer
     */
    addModules(): void;
    protected addModule(module: ApplicationModule): void;
    /**
     * You can bind your application classes to a core classes.
     * So finally your application class will be used instead of core class.
     * Must not be overridden in  a game ApplicationModuleInitializer
     */
    bindClasses(): void;
    /**
     * It's a system method.
     * invoke all registered modules (with addModule()).
     * Must not be overridden in  a game ApplicationModuleInitializer
     *
     */
    invokeModules(): void;
    /**
     * abstract method. Must not be overridden in  a game ApplicationModuleInitializer
     *
     */
    createFSM(): void;
    /**
     * abstract method. Must not be overridden in  a game ApplicationModuleInitializer
     */
    manageMobile(): void;
}
