/**
 * Framework logic part
 */
export declare class CoreTimer {
    private callback;
    private args;
    private static timers;
    private static isPaused;
    private timerId;
    private startId;
    private remainingId;
    constructor(callback: Function, delay: number, args: any[]);
    private destroy;
    private pause;
    private resume;
    /**
     * create new CoreTimer instance and start it immediately
     * setTimeout or setInterval is forbidden
     * @param callback - callback function
     * @param delay - delay in ms
     * @param args
     */
    static start(callback: Function, delay: number, ...args: any[]): CoreTimer;
    /**
     * pause all timers
     */
    static pauseAll(): void;
    /**
     * resume all timers
     */
    static resumeAll(): void;
    /**
     * kill timer, clear memory
     * @param timer
     */
    static kill(timer: CoreTimer): void;
    /**
     * skip timer, call its callback
     * @param timer
     */
    static skip(timer: CoreTimer): void;
}
