import { DeviceInfoService } from 'general-framework';
/**
 * Framework logic part
 */
export class CoreRenderer {
    static create() {
        if (document.readyState === 'complete' || document.readyState === 'interactive') {
            this.onDOMLoaded();
        }
        else {
            document.addEventListener('DOMContentLoaded', () => {
                this.onDOMLoaded();
            });
        }
    }
    static pause() {
        PIXI.ticker.shared.stop();
    }
    static resume() {
        PIXI.ticker.shared.start();
    }
    static onDOMLoaded() {
        if (CoreRenderer.renderer)
            return;
        let app = new PIXI.Application({
            autoResize: true,
            resolution: devicePixelRatio,
            forceCanvas: DeviceInfoService.isCanvas()
        });
        app.renderer.view.style.position = "absolute";
        app.renderer.view.style.display = "block";
        app.renderer.autoResize = true;
        // app.renderer.resize(window.innerWidth, window.innerHeight);
        app.renderer.resize(document.documentElement.clientWidth, document.documentElement.clientHeight);
        CoreRenderer.stage = app.stage;
        CoreRenderer.renderer = app.renderer;
        //Render the stage
        PIXI.ticker.shared.add(() => {
            app.renderer.render(app.stage);
        });
        app.renderer.render(app.stage);
        this.stagePosition = new PIXI.Point(CoreRenderer.stage.x, CoreRenderer.stage.y);
        document.body.querySelector('.canvas-wrap').appendChild(CoreRenderer.renderer.view);
    }
    static onResize() {
        if (DeviceInfoService.isIOs) {
            CoreRenderer.renderer.resize(document.documentElement.clientWidth, document.documentElement.clientHeight + this.iOSRenderHeightStep);
            CoreRenderer.stage.y = this.stagePosition.y + this.iOSShiftPositionY;
        }
        else {
            CoreRenderer.renderer.resize(document.documentElement.clientWidth, document.documentElement.clientHeight);
        }
    }
}
CoreRenderer.iOSShiftPositionY = 0;
CoreRenderer.iOSRenderHeightStep = 150;
//# sourceMappingURL=CoreRenderer.js.map