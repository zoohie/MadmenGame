import { AlignConstants } from "../AlignConstants";
import { BaseViewComponent } from "./BaseViewComponent";
export class BaseBitmapLabel extends BaseViewComponent {
    constructor(data) {
        super(data);
        this._scaleToWidth = false;
        this._width = data.width;
        this._scaleToWidth = data.scaleToWidth;
        this.align = this.sourceData.align;
        if (data.angle !== undefined) {
            this.rotation = data.angle * (Math.PI / 180);
        }
    }
    init() {
        this._textField = new PIXI.extras.BitmapText(this._sourceData.text, {
            font: `${this._sourceData.fontSize} ${this._sourceData.fontFamily}`,
            align: `${this._sourceData.align}`
        });
        this.alignText();
        this.addChild(this._textField);
    }
    get sourceData() {
        return this._sourceData;
    }
    get textField() {
        return this._textField;
    }
    get width() {
        return this._width;
    }
    get align() {
        return this._align;
    }
    set align(value) {
        this._align = value;
    }
    set width(value) {
        this._width = value;
    }
    setText(value) {
        this._textField.text = value;
        this.alignText();
    }
    alignText() {
        if (this._scaleToWidth && this._textField.width > this.width) {
            let ratio = this._textField.width / this._textField.height;
            let newWidth = Math.min(this._textField.width, this.width);
            let newHeight = newWidth / ratio;
            this._textField.height = newHeight;
            this._textField.width = newWidth;
        }
        switch (this.align) {
            case AlignConstants.LEFT:
                this.textField.anchor = 0;
                break;
            case AlignConstants.CENTER:
                this.textField.anchor = 0.5;
                break;
            case AlignConstants.RIGHT:
                this.textField.anchor = 1;
                break;
        }
    }
    setVisible(value) {
        this.visible = value;
    }
}
//# sourceMappingURL=BaseBitmapLabel.js.map