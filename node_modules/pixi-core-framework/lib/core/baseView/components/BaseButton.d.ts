import Sprite = PIXI.Sprite;
import * as PIXI from "pixi.js";
import Graphics = PIXI.Graphics;
import { IBaseButtonConfig, IButtonText } from "../interfaces/IBaseButtonConfig";
import { BaseViewComponent } from "./BaseViewComponent";
import { BaseLabel } from "./BaseLabel";
import { ILabelConfig } from "../interfaces/ILabelConfig";
/**
 * Framework logic part
 */
export declare class BaseButton extends BaseViewComponent {
    protected normal: Sprite;
    protected over: Sprite;
    protected disable: Sprite;
    protected pressed: Sprite;
    protected normalLabel: BaseLabel;
    protected overLabel: BaseLabel;
    protected disableLabel: BaseLabel;
    protected pressedLabel: BaseLabel;
    protected commonLabel: BaseLabel;
    protected _isEnabled: boolean;
    protected initIsComplete: boolean;
    protected _sourceData: IBaseButtonConfig;
    protected _hitTestObject: Graphics;
    protected hitAreaOpacity: number;
    protected hitAreaPolygon: number[];
    protected _buttonText: IButtonText;
    private readonly AVERAGE_OFFSET;
    constructor(data: IBaseButtonConfig);
    isEnabled: boolean;
    buttonText: IButtonText;
    readonly sourceData: IBaseButtonConfig;
    readonly hitTestObject: PIXI.Graphics;
    init(): void;
    private drawPoly;
    private drawRectangle;
    onAdded(): void;
    protected onButtonDown(): void;
    protected onButtonUp(): void;
    protected onButtonOver(): void;
    protected onButtonOut(): void;
    protected createButtonTextLabels(): void;
    protected newBaseLabel(labelConfig: ILabelConfig, buttonParent: PIXI.Container): BaseLabel;
    protected addCommonParameters(target: ILabelConfig, common: ILabelConfig): ILabelConfig;
    protected alignTextFieldToWidth(button: PIXI.Container, label: BaseLabel): void;
    protected alignTextFieldToHeight(button: PIXI.Container, label: BaseLabel): void;
    enable(value: boolean): void;
    setVisible(value: boolean): void;
    protected checkOver(): void;
    reposition(x: number, y: number): void;
}
