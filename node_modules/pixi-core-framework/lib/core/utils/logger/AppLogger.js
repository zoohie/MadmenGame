import { AppLoggerMessageType } from "./AppLoggerMessageType";
export class AppLogger {
    static log(message, messageType, obj) {
        if (this.isProd) {
            return;
        }
        switch (messageType) {
            case AppLoggerMessageType.CLEAR:
                console.clear();
                break;
            case AppLoggerMessageType.ERROR:
                this.sendMessage(message, AppLoggerMessageType.BackgroundOptions.error, obj);
                break;
            case AppLoggerMessageType.EVENT:
                this.sendMessage(message, AppLoggerMessageType.BackgroundOptions.event, obj);
                break;
            case AppLoggerMessageType.SUCCESS:
                this.sendMessage(message, AppLoggerMessageType.BackgroundOptions.success, obj);
                break;
            default:
                this.sendMessage(message, AppLoggerMessageType.BackgroundOptions.default, obj);
                break;
        }
    }
    static sendMessage(message, options, obj) {
        if (obj) {
            console.debug(message, options, obj);
        }
        else {
            console.log('%c' + message, options);
        }
    }
}
AppLogger.isProd = process.env.NODE_ENV === 'production';
//# sourceMappingURL=AppLogger.js.map