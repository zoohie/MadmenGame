import { EnterFrameManager } from "../../engine/renderer/EnterFrameManager";
import { BaseController } from "../../engine/BaseController";
export class CoreCountUp extends BaseController {
    constructor() {
        super(...arguments);
        this._endValue = 0;
        this._currentTickUp = 0;
        this._showCurrency = false;
        this._useRoundValues = false;
    }
    startCountUp(start, end, callback) {
        this._endValue = end;
        this._callback = callback;
        this._currentTickUp = start;
        if (start === end) {
            this.onComplete();
        }
        else {
            this._startTime = new Date().getTime();
            this.tickUpValue = start;
            this._startValue = start;
            EnterFrameManager.instance.addListener(this);
        }
    }
    setTickUpTime(value) {
        this._tickUpTime = value;
    }
    set useRoundValues(value) {
        this._useRoundValues = value;
    }
    onEnterFrame(deltaTime) {
        const currentTime = new Date().getTime();
        const progress = Math.min(1, (currentTime - this._startTime) / this._tickUpTime);
        this._currentTickUp = this._startValue + ((this._endValue - this._startValue) * progress);
        if (this._useRoundValues) {
            this._currentTickUp = Math.round(this._currentTickUp);
        }
        this.tickUpValue = this._currentTickUp;
        if (progress === 1) {
            this.onComplete();
        }
    }
    set showCurrency(value) {
        this._showCurrency = value;
    }
    set updateEvent(value) {
        this._updateEvent = value;
    }
    /**
     * @isStoped
     * return for callback. If true count up was stop with action
     */
    onComplete(isStoped = false) {
        this.killTimer();
        this.tickUpValue = this._endValue;
        if (this._callback) {
            this._callback(isStoped);
        }
    }
    killTimer() {
        if (this._timeOut) {
            clearTimeout(this._timeOut);
        }
        EnterFrameManager.instance.removeListener(this);
    }
    set tickUpValue(value) {
        this.dispatcher.dispatch(this._updateEvent, value);
    }
}
//# sourceMappingURL=CoreCountUp.js.map