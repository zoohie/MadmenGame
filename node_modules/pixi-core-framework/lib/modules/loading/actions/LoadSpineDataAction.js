import { BaseAction } from "../../../core/engine/fsm/BaseAction";
import { EventDispatcher, LoadEvents } from "general-framework";
import { SpineFactory } from "../../../core/baseView/factories/SpineFactory";
export class LoadSpineDataAction extends BaseAction {
    constructor() {
        super(...arguments);
        this.generalDispatcher = EventDispatcher.getInstance();
    }
    /**
     * Dispatch event to load configs and listen for event about finish of loading
     */
    execute() {
        return new Promise((resolve) => {
            this.dispatcher.addListener(LoadEvents.SPINE_FACTORY_DATA_RECEIVED, (data) => {
                SpineFactory.getInstance().mapSpine(data.dataParse, data.id);
            });
            this.generalDispatcher.addListener(LoadEvents.SPINE_DATA_LOADED, () => {
                resolve();
            });
            this.generalDispatcher.dispatch(LoadEvents.LOAD_SPINE_DATA);
        });
    }
}
//# sourceMappingURL=LoadSpineDataAction.js.map