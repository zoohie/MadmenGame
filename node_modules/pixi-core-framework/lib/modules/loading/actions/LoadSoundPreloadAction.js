import { BaseAction } from "../../../core/engine/fsm/BaseAction";
import { AppLogger } from "../../../core/utils/logger/AppLogger";
import { EventDispatcher, LoaderConstants, LoadEvents } from "general-framework";
export class LoadSoundPreloadAction extends BaseAction {
    constructor() {
        super(...arguments);
        this.generalDispatcher = EventDispatcher.getInstance();
    }
    execute() {
        AppLogger.log(`${this.constructor.name}`);
        return new Promise((resolve) => {
            this.generalDispatcher.addListener(LoadEvents.SOUND_LOADED, () => {
                resolve();
            });
            this.generalDispatcher.dispatch(LoadEvents.LOAD_SOUNDS, LoaderConstants.PRELOAD_PRIORITY);
        });
    }
}
//# sourceMappingURL=LoadSoundPreloadAction.js.map