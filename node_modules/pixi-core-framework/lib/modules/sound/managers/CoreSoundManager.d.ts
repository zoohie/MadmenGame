import { Sound } from "../Sound";
import { BaseController } from "../../../core/engine/BaseController";
import { ISoundData } from "../interface/ISoundData";
import { IAssociative } from "../../../core/engine/interfaces/IAssociative";
import { TweenMax } from "gsap";
import { IVolumeData } from "../interface/IVolumeData";
import { ITweenVolumeData } from "../interface/ITweenVolumeData";
export declare class CoreSoundManager extends BaseController {
    private soundsMap;
    private allSounds;
    protected tweensMap: IAssociative<TweenMax>;
    protected addListeners(): void;
    private getSoundDuration;
    protected playSound(data: ISoundData): void;
    protected stopSound(data: ISoundData): void;
    protected pauseSound(data: ISoundData): void;
    protected unPauseSound(data: ISoundData): void;
    protected muteSound(data: ISoundData): void;
    protected unMuteSound(data: ISoundData): void;
    protected muteAllSounds(value: boolean): void;
    protected tweenVolume(data: ITweenVolumeData): void;
    protected setVolume(data: IVolumeData): void;
    protected mapSounds(sound: Sound): void;
    protected onSoundComplete(id: string): void;
    protected freezeSounds(value: any): void;
}
