import { BaseView } from "../../../core/engine/BaseView";
import { ModalPopupEvents } from "../events/ModalPopupEvents";
import { CoreRenderer } from "../../../core/engine/renderer/CoreRenderer";
export class LowBalancePopupView extends BaseView {
    initSourceData() {
        this.closeButton = this.addUIElement("close_btn", ModalPopupEvents.HIDE_LOW_BALANCE_POPUP);
        this.closeButtonBig = this.addUIElement("close_btn_big", ModalPopupEvents.HIDE_LOW_BALANCE_POPUP);
        this.overlay = this.source.getChildByName("overlay");
        this.overlay.interactive = true;
    }
    addUIElement(childName, uiEvent) {
        const uiElement = this.source.getChildByName(childName);
        uiElement.on("clicked", (value) => {
            this.emit(uiEvent);
        });
        return uiElement;
    }
    show() {
        super.show();
        CoreRenderer.stage.addChild(this.source);
    }
    onResize(params) {
        if (!this.overlay) {
            return;
        }
        if (params.width && params.height) {
            this.source.scale.x = this.source.scale.y = params.scale;
        }
        this.source.position.set(params.positionX, params.positionY);
    }
    hide() {
        super.hide();
        CoreRenderer.stage.removeChild(this.source);
    }
}
//# sourceMappingURL=LowBalancePopupView.js.map