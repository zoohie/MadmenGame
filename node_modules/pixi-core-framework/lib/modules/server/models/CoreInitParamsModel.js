import { MoneyFormatter, GoogleAnalytics, RealityCheckModel, PingController, APIController, BlastworksAPI } from "general-framework";
export class CoreInitParamsModel {
    parseResponse(data) {
        const initData = data.data;
        if (initData) {
            initData.name ? this._gameName = initData.name : null;
            if (initData.gameParams && initData.gameParams["front.settings"]) {
                this.parseGameSettings(initData.gameParams["front.settings"]);
            }
            if (initData.gameParams && initData.gameParams["skin_params"]) {
                this.parseOperatorSettings(initData.gameParams["skin_params"]);
            }
            if (initData.gameParams && initData.gameParams["currency.precision_display"]) {
                MoneyFormatter.setPrecision(Number(initData.gameParams["currency.precision_display"]));
            }
            if (initData.currency) {
                if (initData.currency.symbol && initData.currency.symbol !== "") {
                    MoneyFormatter.setCurrencySign(initData.currency.symbol);
                }
                else if (initData.currency.code) {
                    MoneyFormatter.setCurrencySign(initData.currency.code);
                }
            }
            if (initData.gameParams && initData.gameParams.trackers && initData.gameParams.trackers["googleAnalytics"]) {
                GoogleAnalytics.googleAnalyticsData = initData.gameParams.trackers["googleAnalytics"];
            }
            if (initData.gameParams && initData.gameParams.APIData) {
                APIController.APIData = initData.gameParams.APIData;
                APIController.subscribeToAPIEvents();
            }
        }
    }
    parseGameSettings(data) {
        if (data.isShowHomeButton) {
            RealityCheckModel.isShowHomeButton = data.isShowHomeButton;
        }
        if (data.operator_ping) {
            PingController.data = data.operator_ping;
        }
        if (data.realityCheck) {
            this._realityCheckData = data.realityCheck;
        }
        if (data.showAdultResponsibility !== undefined) {
            this._showAdultResponsibility = data.showAdultResponsibility;
        }
        if (data.isBlastworksPostMessage !== undefined) {
            BlastworksAPI.isBlastworksPostMessage = data.isBlastworksPostMessage;
        }
    }
    parseOperatorSettings(data) {
        if (data.time_limit !== undefined) {
            this._realityCheckData = data;
        }
    }
    get gameName() {
        return this._gameName;
    }
    get realityCheckData() {
        return this._realityCheckData;
    }
    get showAdultResponsibility() {
        return this._showAdultResponsibility;
    }
}
//# sourceMappingURL=CoreInitParamsModel.js.map