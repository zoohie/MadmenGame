import {BaseAction} from "./BaseAction";

/**
 * This action is resolved after the last included action is resolved.
 * All actions start in the one moment and work in parallel thread.
 */
export class ParallelAction extends BaseAction{

    protected mainResolve: Function;

    execute(): Promise<any> {
        return new Promise<any>( resolve => {
            this.mainResolve = resolve;
            Promise.all(
                this.actions.map((action) => {
                    return action.execute();
                })
            ).then( () => {
                this.mainResolve();
            });
        })
        return Promise.all(
            this.actions.map((action) => {
                return action.execute();
            })
        );
    }

    public skip(): void {
        super.skip();
        this.actions.forEach( action => {
            action.skip();
        });
        this.mainResolve();
    }

}
