import {CoreServerServiceEvents} from "../events/CoreServerServiceEvents";
import {BaseServerService} from "./BaseServerService";
import {CoreServerConstants} from "../CoreServerConstants";
import {IResponseData} from "../interfaces/IResponseData";
import {AppLogger} from "../../../core/utils/logger/AppLogger";
import {AppLoggerMessageType} from "../../../core/utils/logger/AppLoggerMessageType";

export class InitialServerService extends BaseServerService{

    constructor() {
        super();
        this.dispatcher.addListener(CoreServerServiceEvents.SEND_INIT_REQUEST, this.send.bind(this));
    }

    private send(): void {
        this.fetch({}, CoreServerConstants.INIT)
            .then( (data:IResponseData) => {
                this.onRequest(data);
                this.dispatcher.dispatch(CoreServerServiceEvents.RECEIVE_INIT_RESPONSE);
            });
    }

    protected onRequest(data: IResponseData): void {
        super.onRequest(data);
        AppLogger.log("Init response recieved", AppLoggerMessageType.DEFAULT)
    }
}
