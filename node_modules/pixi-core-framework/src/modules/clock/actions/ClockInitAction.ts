import {BaseAction} from "../../../core/engine/fsm/BaseAction";
import {ClockEvents} from "../events/ClockEvents";
import {CoreInitParamsModel} from "../../server/models/CoreInitParamsModel";
import {getModel} from "../../../core/engine/createInstance";
import {CoreEvents, EventDispatcher, IRealityCheckParams, LocalStorage} from "general-framework";

export class ClockInitAction extends BaseAction {
    execute(): Promise<any> {
        this.dispatcher.dispatch(ClockEvents.START_CLOCK);
        const initParamsModel: CoreInitParamsModel = getModel(this, CoreInitParamsModel) as CoreInitParamsModel;

        if (initParamsModel.realityCheckData !== undefined) {
            let realityCheckData: IRealityCheckParams = initParamsModel.realityCheckData as IRealityCheckParams;
            EventDispatcher.getInstance().dispatch(CoreEvents.ON_INIT_RECEIVED, realityCheckData);
            EventDispatcher.getInstance().dispatch(CoreEvents.SET_REALITY_CHECK_TIMEOUT);
        }
        return Promise.resolve();

    }
}
