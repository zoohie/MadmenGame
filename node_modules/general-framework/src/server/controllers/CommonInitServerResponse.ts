import {IGeneralResponseData} from "../interfaces/IGeneralResponseData";
import {IGeneralInitialData} from "../interfaces/IGeneralInitialData";
import {IRealityCheckParams} from "../../reality-check/IRealityCheckParams";
import {RealityCheckModel} from "../../reality-check/RealityCheckModel";
import {FrontSettingsModel} from "../../additionalOperatorInformation/models/FrontSettingsModel";
import {ISkinParamsData} from "../../additionalOperatorInformation/interfaces/ISkinParamsData";
import {PingController} from "../../operator/PingController";
import {RealityCheckData} from "../../reality-check/RealityCheckData";
import {APIController} from "../../operator/APIController";

export class CommonInitServerResponse {

    protected static _realityCheckData: IRealityCheckParams;
    private static _skinParams: ISkinParamsData;

    public static parseResponse(data: IGeneralResponseData) {
        const initData: IGeneralInitialData = data.data as IGeneralInitialData;
        if (initData) {

            if (initData.gameParams && initData.gameParams["front.settings"]) {
                this.parseGameSettings(initData.gameParams["front.settings"]);
            }
            if (initData.gameParams && initData.gameParams["skin_params"]) {
                this.parseOperatorSettings(initData.gameParams["skin_params"]);
            }
            if ( initData.gameParams && initData.gameParams.APIData ) {
                APIController.APIData = initData.gameParams.APIData;
            }
        }
    }

    /**
     * Method parse Reality check ond other "front.settings" params from response
     * @param data - server init response
     */
    protected static parseGameSettings(data): void {
        if (data.realityCheck) {
            this._realityCheckData = data.realityCheck;
            this.setRealityCheckData(this._realityCheckData);

        }
        FrontSettingsModel.parseInitResponse(data);
    }

    /**
     * Method parse Reality check ond other skin params from response
     * @param data - server init response
     */
    private static parseOperatorSettings(data): void {
        let realityCheckData = data as IRealityCheckParams;
        this._skinParams = data as ISkinParamsData;
        if (realityCheckData.time_limit !== undefined) {
            this._realityCheckData = realityCheckData;
            this.setRealityCheckData(this._realityCheckData);
        }
        if (this._skinParams) {
            if (this._skinParams.operator_ping) {
                PingController.data = typeof this._skinParams.operator_ping === 'string'
                ? JSON.parse(this._skinParams.operator_ping)
                : this._skinParams.operator_ping;
            }
            if (this._skinParams.game_provider_id) {
                RealityCheckData.game_provider_id = this._skinParams.game_provider_id;
            }

        }
    }

    /**
     * Method set params to model
     * @param data - reality check params
     */
    private static setRealityCheckData(data: IRealityCheckParams) {
        RealityCheckModel.exit_URL = data.exit_URL ? decodeURIComponent(data.exit_URL) : null;
        RealityCheckModel.lobby_URL = data.lobby_URL ? decodeURIComponent(data.lobby_URL) : null;
        RealityCheckModel.history_URL = data.history_URL ? decodeURIComponent(data.history_URL) : null;
    }

    public static get skinParams(): ISkinParamsData {
        return this._skinParams;
    }
}
