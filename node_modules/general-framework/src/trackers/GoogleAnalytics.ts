import {IGoogleAnalyticsData} from "./IGoogleAnalyticsData";

export class GoogleAnalytics {
    /**
     * Google analytics data is retrieved 
     * from initial server response
     */
    private static _googleAnalyticsData: IGoogleAnalyticsData;

    /**
     * Setter
     */
    public static set googleAnalyticsData(data: IGoogleAnalyticsData) {
        this._googleAnalyticsData = data;
    } 

    /**
     * Getter
     */
    public static get googleAnalyticsData(): IGoogleAnalyticsData {
        return this._googleAnalyticsData;
    }

    /**
     * This method is fired each time
     * any event occurs in the game,
     * but sends data to google only,
     * when there's eventList from server
     * and this is production build
     */
    public static postData(event?: string, options?: any): void {
        if( !this._googleAnalyticsData || process.env.NODE_ENV !== "production" ) {
            return; 
        }

        if( this._googleAnalyticsData.eventList[event] ) {
            const sendObject = {
                hitType: "event",
                eventAction: "Click",
                eventCategory: this._googleAnalyticsData.eventList[event],
            }
            if (this._googleAnalyticsData.eventValuesList && this._googleAnalyticsData.eventValuesList[event]) {
                const value: string = this._googleAnalyticsData.eventValuesList[event] === "options" ?
                    options.toString() :
                    options[this._googleAnalyticsData.eventValuesList[event].replace("options.", "")].toString();
                sendObject["eventLabel"] = value;
            }
            //@ts-ignore
            window.ga("send", sendObject);
        }
    }
}
