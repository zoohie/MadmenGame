import { ModalPopupVO } from "./interfaces/ModalPopupVO";
import { ModalPopupView } from "./ModalPopupView";
import { IModalPopupStyles } from "./interfaces/IModalPopupStyles";
import { ModalPopupController } from "./controller/ModalPopupController";
/**
 * To use modal first create instance:
 *      -> const modal = new ModalPopup()
 * than inject styles to html head tag:
 *      -> modal.insertPopupStyles([,yourStyles])
 * now you can use it with:
 *      -> dispatcher.dispatch(event [, dataWithTextButtons]);
 */
/**
 * Controller to create and manage of modal popup.
 * @method showModalPopup
 * @method hideModalPopup
 * @method insertPopupStyles
 */
export declare class ModalPopup {
    private dispatcher;
    protected view: ModalPopupView;
    private _controller;
    constructor();
    /**
     * Calling view method to show modal popup
     * @param data
     */
    showModalPopup(data: ModalPopupVO): void;
    /**
     * Calling view method to hide modal popup
     */
    hideModalPopup(): void;
    /**
     * Injecting of prepared styles with the possibility of their modification
     * This method create style tag and insert in it prepared styles
     * It's possible to customize default styles for current project
     * @param styles
     */
    insertPopupStyles(styles?: IModalPopupStyles): void;
    /**
     * register emit method
     * @param event
     */
    protected onViewEmit(event: string): void;
    readonly controller: ModalPopupController;
}
