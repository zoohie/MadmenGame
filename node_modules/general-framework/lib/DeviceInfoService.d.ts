import { IDeviceInfo } from './interface/IDeviceInfo';
export declare class DeviceInfoService {
    private static mobileDetect;
    private static _dpi;
    private static iOS13;
    private static _isCanvas;
    private static _deviceInfo;
    /**
     * Inits device info service
     */
    static init(): void;
    static addMobileDevTools(isShow?: boolean): void;
    /**
     * Gets whether is landscape
     */
    static readonly isLandscape: boolean;
    /**
     * Gets whether is full screen
     */
    static readonly isFullScreen: boolean;
    /**
     * Gets whether is full screen on landscape orientation
     * checks only the height of device
     */
    static readonly isLandscapeFullScreen: boolean;
    /**
     * Gets whether is IOs
     */
    static readonly isIOs: boolean;
    /**
     * Defines whether is Chrome current browser
     */
    static readonly isChrome: boolean;
    /**
     * Gets whether is desktop
     */
    static readonly isDesktop: boolean;
    /**
     * Gets whether is tablet
     */
    static readonly isTablet: boolean;
    /**
     * Gets whether is mobile
     */
    static readonly isMobile: boolean;
    /**
     * Gets platform
     */
    static readonly platform: string;
    /**
     * Gets dpi
     */
    static readonly dpi: string;
    /**
     * Gets userAgent string data
     */
    static readonly userAgent: string;
    /**
     * Recieves array of devices and checks whether it matches current
     */
    static setDeviceInfo(array: IDeviceInfo[]): void;
    /**
     * Check if browser use webGL and set @param isCanvas:boolean
     */
    static detectWebGL(): void;
    /**
     * Gets whether its canvas-based
     */
    static isCanvas(): boolean;
    /**
     * Gets device info data
     */
    static getDeviceInfo(): IDeviceInfo;
}
