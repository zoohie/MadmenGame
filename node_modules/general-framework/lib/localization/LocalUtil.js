export class LocalUtil {
    /**
    * create Dictionary from loaded data
    * @param data - loaded data
    */
    static setDictionary(data) {
        const arr = Object.keys(data).map((key) => {
            return [key, data[key]];
        });
        this.dictionary = new Map(arr);
    }
    /**
     * add data to the Dictionary
     * @param data
     */
    static addDictionary(data) {
        Object.keys(data).forEach((key) => {
            this.dictionary.set(key, data[key]);
        });
    }
    /**
    * get text from Dictionary by key
    * @param key - key in Dictionary
    */
    static text(key) {
        let res = key;
        if (this.dictionary && this.dictionary.get(key)) {
            res = this.dictionary.get(key);
        }
        return res;
    }
    /**
     * check if key exists in theDictionary
     * @param key<string> - key in Dictionary
     */
    static has(key) {
        return this.dictionary.has(key);
    }
}
//# sourceMappingURL=LocalUtil.js.map