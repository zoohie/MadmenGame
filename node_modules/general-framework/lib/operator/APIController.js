import { APIConstants } from "./APIConstants";
export class APIController {
    static set balanceUpdateType(value) {
        this._balanceUpdateType = value;
    }
    static get balanceUpdateType() {
        return this._balanceUpdateType;
    }
    static set APIData(data) {
        this._APIData = data;
    }
    static get APIData() {
        return this._APIData;
    }
    /**
     * This method is fired each time when player's balance changes ingame,
     * before spin and after spin ends while balance being updated.
     */
    static postMessage(message, type) {
        if (!this._APIData || process.env.NODE_ENV !== "production") {
            return;
        }
        if (this.balanceUpdateType && this.balanceUpdateType === type) {
            return;
        }
        if (message && this._APIData.origin && window.parent) {
            window.parent.postMessage(message, this._APIData.origin);
            this.balanceUpdateType = type;
        }
    }
    /**
     * This method is needed for freeSpins case (for now),
     * so the latest update data can be sent to origin.
    */
    static resetBalanceUpdateType(value) {
        this.balanceUpdateType = value;
    }
    /**
     * This method listens to 'message' event that is fired
     * from operator and does some local stuff.
    */
    static subscribeToAPIEvents() {
        if (!this._APIData || process.env.NODE_ENV !== "production") {
            return;
        }
        window.addEventListener("message", (event) => {
            if (!event.data || !event.data) {
                return;
            }
            if (event.data.name === this._APIData.stopAutoSpins.value) {
                window.dispatchEvent(new Event(APIConstants.stopAutoSpins));
            }
        });
    }
}
//# sourceMappingURL=APIController.js.map