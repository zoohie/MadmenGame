import { ISoundsGroup } from "../interface/ISoundsLoader";
import { EventDispatcher } from "../../EventDispatcher";
import { ILazySoundGroup } from "../interface/ILazySoundGroup";
export declare class SoundLoader {
    protected mainInitialResolve: Function;
    protected lazyQueue: ILazySoundGroup[];
    protected mainLazyResolve: Function;
    protected currentLazyGroup: ILazySoundGroup;
    protected forceGroupId: string;
    protected currentPriorityID: string;
    protected dispatcher: EventDispatcher;
    load(priority: string): Promise<any>;
    forceLoad(groupId: string): void;
    protected loadLazyQueue(soundsData: ISoundsGroup[]): Promise<any>;
    protected loadLazyGroup(): void;
    protected loadLazySounds(group: ISoundsGroup): void;
    protected checkNextLazyAsset(): void;
    protected onLazyGroupEnd(): void;
    protected loadQueue(soundsData: ISoundsGroup[]): Promise<any>;
}
