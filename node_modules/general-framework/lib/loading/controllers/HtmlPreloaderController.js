import { LoaderConstants } from "../constants/LoaderConstants";
import { LoadEvents } from '../events/LoadEvents';
import { EventDispatcher } from '../../EventDispatcher';
export class HtmlPreloaderController {
    constructor() {
        this.isPaused = false;
        this.canBeRemoved = false;
        this.dispatcher = EventDispatcher.getInstance();
        this.current = 1;
        this.gameLogo = document.getElementById('gameLogo');
        this.loaderElement = document.getElementById('logo-progress-bar');
        this.videoContainer = this.gameLogo.getElementsByClassName('video-container')[0];
        const logoVideo = document.querySelector('#gameLogo video');
        if (window["logoAnimationIsPlayed"]) {
            logoVideo.addEventListener("pause", () => {
                this.isPaused = true;
                if (this.canBeRemoved) {
                    this.startFade();
                }
            });
        }
        else {
            this.isPaused = true;
        }
        this.addListeners();
    }
    addListeners() {
        this.dispatcher.addListener(LoadEvents.LOAD_PROGRESS, this.updateProgress, this);
        this.dispatcher.addListener(LoadEvents.REMOVE_PRELOADER, this.hideLoader, this);
    }
    updateProgress(progress) {
        let currentProgress = this.current / progress * 100;
        this.loaderElement.style.width = currentProgress + '%';
        this.dispatcher.dispatch(LoadEvents.UPDATE_LOAD_PROGRESS, currentProgress);
        this.current++;
    }
    hideLoader(priority) {
        if (priority === LoaderConstants.PRELOAD_PRIORITY) {
            this.dispatcher.removeListener(LoadEvents.LOAD_PROGRESS, this.updateProgress, this);
            this.canBeRemoved = true;
            if (!this.isPaused) {
                return;
            }
            this.startFade();
        }
    }
    startFade() {
        setTimeout(() => {
            this.videoContainer.classList.add('hide');
            setTimeout(() => {
                this.gameLogo.classList.add('hide');
                setTimeout(() => {
                    this.gameLogo.remove();
                }, 800);
            }, 800);
        }, 300);
    }
}
//# sourceMappingURL=HtmlPreloaderController.js.map