{"version":3,"sources":["webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/GameConstants.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/index.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/player/configs/InitialValuesConfig.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/player/entity/PlayerEntity.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/player/model/PlayerModel.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/player/view/PlayerView.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/tasks/view/TaskView.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/tasks/view/TasksView.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/ui/views/UIView.ts","webpack:////Users/ihorpopadiuk/Documents/Innovation Day/Madmen/src/modules/utils/Utils.ts"],"names":["GameConstants","startLocalTime","day","time","rootContainer","width","height","backgroundPath","backgroundSize","heigth","textStyle","fontSize","align","ROOT_VIEW","UI_VIEW","PLAYER_VIEW","TASKS_VIEW","app","backgroundColor","init","document","body","appendChild","view","stage","addChild","renderer","render","ticker","add","delta","setTimeout","InitialValuesConfig","health","energy","satiety","mood","reaction","strategy","synergy","healthModifier","timeModifier","energyModifier","satietyModifier","moodModifier","reactionModifier","strategyModifier","synergyModifier","PlayerEntity","this","playerModel","defaultTickActions","calcSatiety","calculateSatiety","calcEnergy","calculateEnergy","calcMood","calculateMood","calcHealth","calculateHealth","defaultTaskActions","doHometasks","eatDadsFood","eatMomsFood","eatPizza","goToSchool","helpMom","playGameForFun","playOtherGames","procrastination","restWithFriends","showerAndCleaning","sleep","trainGameWithBots","trainReaction","trainStrategy","trainSynergy","actionName","runDefaultTickChanges","checkWhetherPlayerAlive","PlayerModel","_healthModifier","value","_timeModifier","_energyModifier","_satietyModifier","_moodModifier","_reactionModifier","_strategyModifier","_synergyModifier","_health","_time","_energy","_satiety","_mood","_reaction","_strategy","_synergy","PlayerView","text","createView","addInitialStats","PIXI","Container","getTextStyle","Text","toString","position","set","TaskView","title","description","changes","super","titleText","x","interactive","buttonMode","on","setTaskCallback","descriptionText","taskContainer","TasksView","parseGameData","then","addTasks","Promise","resolve","loadJSON","response","gameData","JSON","parse","offsetY","categories","Object","entries","i","length","tasks","j","task","taskView","y","UIView","addBackground","scale","Sprite","from","Utils","callback","xObj","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","TextStyle","Math","floor","random"],"mappings":"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","file":"js/main.ead32ea28a742751815f.js","sourcesContent":["export const GameConstants = {\n    startLocalTime: {\n        day: 1,\n        time: 0\n    },\n    rootContainer: {\n        width: 1280,\n        height: 720\n    },\n    backgroundPath: \"data/assets/background.jpg\",\n    backgroundSize: {\n        heigth: 1920,\n        width: 1080\n    },\n    textStyle: {\n        fontSize: 36,\n        align: \"center\"\n    }\n}","import * as PIXI from \"pixi.js\";\nimport {PlayerModel} from \"./modules/player/model/PlayerModel\";\nimport {PlayerEntity} from \"./modules/player/entity/PlayerEntity\";\nimport {UIView} from \"./modules/ui/views/UIView\";\nimport {GameConstants} from \"./GameConstants\";\nimport {PlayerView} from \"./modules/player/view/PlayerView\";\nimport {TasksView} from \"./modules/tasks/view/TasksView\";\n\nconst PLAYER_MODEL: PlayerModel = new PlayerModel();\nconst PLAYER_ENTITY: PlayerEntity = new PlayerEntity();\nconst ROOT_VIEW = new PIXI.Container();\nconst UI_VIEW: UIView = new UIView();\nconst PLAYER_VIEW: PlayerView = new PlayerView();\nconst TASKS_VIEW: TasksView = new TasksView();\n\nconst app = new PIXI.Application({\n    backgroundColor: 0x1099bb,\n    width: GameConstants.rootContainer.width,\n    height: GameConstants.rootContainer.height,\n});\n\nfunction init() {\n    addCanvasToStage();\n    setRootViewDimensions();\n    addRootViewToStage();\n    addOtherViewsToRootView();\n\n    //Add 'onclick' events handlers for each action in UI\n    setup();\n}\n\nfunction addCanvasToStage() {\n    document.body.appendChild(app.view);\n}\n\nfunction setRootViewDimensions() {\n    ROOT_VIEW.width = GameConstants.rootContainer.width;\n    ROOT_VIEW.height = GameConstants.rootContainer.height;\n}\n\nfunction addRootViewToStage() {\n    app.stage.addChild(ROOT_VIEW);\n    app.renderer.render(app.stage);\n}\n\nfunction addOtherViewsToRootView() {\n    UI_VIEW.view.addChild(\n        PLAYER_VIEW.view,\n        TASKS_VIEW.view\n    );\n\n    ROOT_VIEW.addChild(UI_VIEW.view);\n}\n\nfunction setup() {\n    app.ticker.add((delta) => {\n        app.renderer.render(app.stage);\n    });\n}\n\nsetTimeout(() => {\n    init();\n}, 1000);","export const InitialValuesConfig = {\n    health: 100,\n    time: 48,\n    energy: 100,\n    satiety: 20,\n    mood: 50,\n    reaction: 0,\n    strategy: 0,\n    synergy: 0,\n\n    healthModifier: 1,\n    timeModifier: 1,\n    energyModifier: 1,\n    satietyModifier: 1,\n    moodModifier: 1,\n    reactionModifier: 1,\n    strategyModifier: 1,\n    synergyModifier: 1\n}","import {PlayerModel} from \"../model/PlayerModel\";\nimport {IDefaultTickActions} from \"../interfaces/IDefaultTickActions\";\nimport {IDefaultTaskActions} from \"../interfaces/IDefaultTaskActions\";\nimport {Utils} from \"../../utils/Utils\";\n\nexport class PlayerEntity {\n    private playerModel: PlayerModel;\n    public defaultTickActions: any;\n    public defaultTaskActions: any;\n\n    constructor() {\n        this.init();\n    }\n\n    private init(): void {\n        this.playerModel = new PlayerModel();\n\n        this.defaultTickActions = {\n            calcSatiety: this.calculateSatiety(),\n            calcEnergy: this.calculateEnergy(),\n            calcMood: this.calculateMood(),\n            calcHealth: this.calculateHealth()\n        }\n\n        this.defaultTaskActions = {\n            doHometasks: this.doHometasks(),\n            eatDadsFood: this.eatDadsFood(),\n            eatMomsFood: this.eatMomsFood(),\n            eatPizza: this.eatPizza(),\n            goToSchool: this.goToSchool(),\n            helpMom: this.helpMom(),\n            playGameForFun: this.playGameForFun(),\n            playOtherGames: this.playOtherGames(),\n            procrastination: this.procrastination(),\n            restWithFriends: this.restWithFriends(),\n            showerAndCleaning: this.showerAndCleaning(),\n            sleep: this.sleep(),\n            trainGameWithBots: this.trainGameWithBots(),\n            trainReaction: this.trainReaction(),\n            trainStrategy: this.trainStrategy(),\n            trainSynergy: this.trainSynergy()\n        }\n    }\n\n    public runDefaultTickActions(): void {\n        for( let actionName in this.defaultTickActions ) {\n            this.defaultTickActions[actionName]();\n        }\n    }\n\n    private runDefaultTickChanges(time: number, energy: number, satiety: number): void {\n        this.playerModel.time -= time;\n        this.playerModel.energy -= energy;\n        this.playerModel.satiety -= satiety;\n    }\n\n    private doHometasks(): void {\n        this.runDefaultTickChanges(4, 3, 7);\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += 1 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= 1 / this.playerModel.moodModifier;\n        }\n\n    }\n\n    private eatDadsFood(): void {\n        this.runDefaultTickChanges(1, 3, 0);\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += 25 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= 25 / this.playerModel.satietyModifier;\n        }\n    }\n\n    private eatMomsFood(): void {\n        this.runDefaultTickChanges(1, 3, 0);\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += 75 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= 75 / this.playerModel.satietyModifier;\n        }\n    }\n\n    private eatPizza(): void {\n        this.runDefaultTickChanges(1, 3, 0);\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += 50 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= 50 / this.playerModel.satietyModifier;\n        }\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += 5 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= 5 / this.playerModel.moodModifier;\n        }\n\n        if( this.playerModel.health > 0 ) {\n            this.playerModel.health += -5 * this.playerModel.healthModifier;\n        } else {\n            this.playerModel.health -= -5 / this.playerModel.healthModifier;\n        }\n\n        this.checkWhetherPlayerAlive();\n    }\n\n    private goToSchool(): void {\n        this.runDefaultTickChanges(12, 3, 0);\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += -1.5 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= -1.5 / this.playerModel.satietyModifier;\n        }\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += -0.2 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= -0.2 / this.playerModel.moodModifier;\n        }\n    }\n\n    private helpMom(): void {\n        this.runDefaultTickChanges(2, 3, 7);\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += -2 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= -2 / this.playerModel.moodModifier;\n        }\n    }\n\n    private playGameForFun(): void {\n        this.runDefaultTickChanges(1, 3, 0);\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += 1 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= 1 / this.playerModel.satietyModifier;\n        }\n\n        if( this.playerModel.reaction > 0 ) {\n            this.playerModel.reaction += 0.75 * this.playerModel.reactionModifier;\n        } else {\n            this.playerModel.reaction -= 0.75 / this.playerModel.reactionModifier;\n        }\n\n        if( this.playerModel.strategy > 0 ) {\n            this.playerModel.strategy += 0.75 * this.playerModel.strategyModifier;\n        } else {\n            this.playerModel.strategy -= 0.75 / this.playerModel.strategyModifier;\n        }\n\n        if( this.playerModel.synergy > 0 ) {\n            this.playerModel.synergy += 0.75 * this.playerModel.synergyModifier;\n        } else {\n            this.playerModel.synergy -= 0.75 / this.playerModel.synergyModifier;\n        }\n    }\n\n    private playOtherGames(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += 3 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= 3 / this.playerModel.moodModifier;\n        }\n    }\n\n    private procrastination(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n    }\n\n    private restWithFriends(): void {\n        this.runDefaultTickChanges(4, 3, 7);\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.mood += 4 * this.playerModel.moodModifier;\n        } else {\n            this.playerModel.mood -= 4 / this.playerModel.moodModifier;\n        }\n    }\n\n    private showerAndCleaning(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.health > 0 ) {\n            this.playerModel.health += 1 * this.playerModel.healthModifier;\n        } else {\n            this.playerModel.health -= 1 / this.playerModel.healthModifier;\n        }\n    }\n\n    private sleep(): void {\n        this.runDefaultTickChanges(16, 0, 0);\n\n        if( this.playerModel.energy > 0 ) {\n            this.playerModel.energy += 12.5 * this.playerModel.energyModifier;\n        } else {\n            this.playerModel.energy -= 12.5 / this.playerModel.energyModifier;\n        }\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.satiety += -2.2 * this.playerModel.satietyModifier;\n        } else {\n            this.playerModel.satiety -= -2.2 / this.playerModel.satietyModifier;\n        }\n\n        if( this.playerModel.health > 0 ) {\n            this.playerModel.health += 0.2 * this.playerModel.healthModifier;\n        } else {\n            this.playerModel.health -= 0.2 / this.playerModel.healthModifier;\n        }\n    }\n\n    private trainGameWithBots(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.reaction > 0 ) {\n            this.playerModel.reaction += 1 * this.playerModel.reactionModifier;\n        } else {\n            this.playerModel.reaction -= 1 / this.playerModel.reactionModifier;\n        }\n\n        if( this.playerModel.strategy > 0 ) {\n            this.playerModel.strategy += 1 * this.playerModel.strategyModifier;\n        } else {\n            this.playerModel.strategy -= 1 / this.playerModel.strategyModifier;\n        }\n    }\n\n    private trainReaction(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.reaction > 0 ) {\n            this.playerModel.reaction += 2.5 * this.playerModel.reactionModifier;\n        } else {\n            this.playerModel.reaction -= 2.5 / this.playerModel.reactionModifier;\n        }\n    }\n\n    private trainStrategy(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.strategy > 0 ) {\n            this.playerModel.strategy += 2.5 * this.playerModel.strategyModifier;\n        } else {\n            this.playerModel.strategy -= 2.5 / this.playerModel.strategyModifier;\n        }\n    }\n\n    private trainSynergy(): void {\n        this.runDefaultTickChanges(1, 3, 7);\n\n        if( this.playerModel.reaction > 0 ) {\n            this.playerModel.reaction += 0.25 * this.playerModel.reactionModifier;\n        } else {\n            this.playerModel.reaction -= 0.25 / this.playerModel.reactionModifier;\n        }\n\n        if( this.playerModel.strategy > 0 ) {\n            this.playerModel.strategy += 0.25 * this.playerModel.strategyModifier;\n        } else {\n            this.playerModel.strategy -= 0.25 / this.playerModel.strategyModifier;\n        }\n\n        if( this.playerModel.synergy > 0 ) {\n            this.playerModel.synergy += 2.5 * this.playerModel.synergyModifier;\n        } else {\n            this.playerModel.synergy -= 2.5 / this.playerModel.synergyModifier;\n        }\n    }\n\n    private calculateSatiety(): void {\n        if( this.playerModel.satiety >= 10 ) {\n            this.playerModel.energy -= 3;\n            this.playerModel.moodModifier = 1;\n\n            return;\n        }\n\n        if( this.playerModel.satiety > 0 ) {\n            this.playerModel.energy -= 5;\n            this.playerModel.health -= 0.25;\n\n            this.playerModel.moodModifier = 0.75;\n\n            this.checkWhetherPlayerAlive();\n\n            return;\n        }\n\n        this.playerModel.energy -= 6.5;\n        this.playerModel.health -= 1;\n\n        this.playerModel.moodModifier = 0.5;\n\n        this.checkWhetherPlayerAlive();\n    }\n\n    private calculateEnergy(): void {\n        if( this.playerModel.energy >= 10 ) {\n            this.playerModel.satiety -= 7;\n            this.playerModel.moodModifier = 1;\n\n            return;\n        }\n\n        if( this.playerModel.energy > 0 ) {\n            this.playerModel.satiety -= 12;\n            this.playerModel.health -= 1;\n\n            this.playerModel.moodModifier = 0.75;\n\n            this.checkWhetherPlayerAlive();\n\n            return;\n        }\n\n        this.playerModel.satiety -= 18;\n        this.playerModel.health -= 4;\n\n        this.playerModel.moodModifier = 0.5;\n\n        this.checkWhetherPlayerAlive();\n    }\n\n    private calculateMood(): void {\n        if( this.playerModel.mood = 100 ) {\n            this.playerModel.reactionModifier = 1.25;\n            this.playerModel.strategyModifier = 1.25;\n            this.playerModel.synergyModifier = 1.25;\n            this.playerModel.energyModifier = 1.5;\n            this.playerModel.satietyModifier = 1.5;\n            this.playerModel.healthModifier = 1.5;\n\n            return;\n        }\n\n        if( this.playerModel.mood >= 90 ) {\n            this.playerModel.reactionModifier = 1.1;\n            this.playerModel.strategyModifier = 1.1;\n            this.playerModel.synergyModifier = 1.1;\n            this.playerModel.energyModifier = 1.2;\n            this.playerModel.satietyModifier = 1.2;\n            this.playerModel.healthModifier = 1.2;\n\n            this.playerModel.health += 2;\n\n            return;\n        }\n\n        if( this.playerModel.mood >= 50 ) {\n            this.playerModel.reactionModifier = 1;\n            this.playerModel.strategyModifier = 1;\n            this.playerModel.synergyModifier = 1;\n            this.playerModel.energyModifier = 1;\n            this.playerModel.satietyModifier = 1;\n            this.playerModel.healthModifier = 1;\n\n            this.playerModel.health += 1;\n\n            return;\n        }\n\n        if( this.playerModel.mood >= 25 ) {\n            this.playerModel.reactionModifier = 0.9;\n            this.playerModel.strategyModifier = 0.9;\n            this.playerModel.synergyModifier = 0.9;\n            this.playerModel.energyModifier = 0.8;\n            this.playerModel.satietyModifier = 0.8;\n            this.playerModel.healthModifier = 0.8;\n\n            return;\n        }\n\n        if( this.playerModel.mood >= 10 ) {\n            this.playerModel.reactionModifier = 0.75;\n            this.playerModel.strategyModifier = 0.75;\n            this.playerModel.synergyModifier = 0.75;\n            this.playerModel.energyModifier = 0.6;\n            this.playerModel.satietyModifier = 0.6;\n            this.playerModel.healthModifier = 0.6;\n\n            return;\n        }\n\n        if( this.playerModel.mood > 0 ) {\n            this.playerModel.reactionModifier = 0.5;\n            this.playerModel.strategyModifier = 0.5;\n            this.playerModel.synergyModifier = 0.5;\n            this.playerModel.energyModifier = 0.4;\n            this.playerModel.satietyModifier = 0.4;\n            this.playerModel.healthModifier = 0.4;\n\n            this.playerModel.health -= 2;\n\n            this.checkWhetherPlayerAlive();\n\n            return;\n        }\n\n        this.playerModel.reactionModifier = 0.1;\n        this.playerModel.strategyModifier = 0.1;\n        this.playerModel.synergyModifier = 0.1;\n        this.playerModel.energyModifier = 0.2;\n        this.playerModel.satietyModifier = 0.2;\n        this.playerModel.healthModifier = 0.2;\n\n        this.playerModel.health -= 10;\n\n        this.checkWhetherPlayerAlive();\n    }\n\n    private calculateHealth(): void {\n        if( this.playerModel.health >= 75 ) {\n            this.playerModel.reactionModifier = 1;\n            this.playerModel.strategyModifier = 1;\n            this.playerModel.synergyModifier = 1;\n            this.playerModel.moodModifier = 1;\n\n            //this.playerModel.energy = 100;\n            //this.playerModel.satiety = 100;\n\n            return;\n        }\n\n        if( this.playerModel.health >= 50 ) {\n            this.playerModel.reactionModifier = 0.9;\n            this.playerModel.strategyModifier = 0.9;\n            this.playerModel.synergyModifier = 0.9;\n            this.playerModel.moodModifier = 0.75;\n\n            //this.playerModel.energy = 90;\n            //this.playerModel.satiety = 90;\n\n            return;\n        }\n\n        if( this.playerModel.health >= 25 ) {\n            this.playerModel.reactionModifier = 0.75;\n            this.playerModel.strategyModifier = 0.75;\n            this.playerModel.synergyModifier = 0.75;\n            this.playerModel.moodModifier = 0.5;\n\n            //this.playerModel.energy = 75;\n            //this.playerModel.satiety = 75;\n\n            return;\n        }\n\n        if( this.playerModel.health >= 10 ) {\n            this.playerModel.reactionModifier = 0.5;\n            this.playerModel.strategyModifier = 0.5;\n            this.playerModel.synergyModifier = 0.5;\n            this.playerModel.moodModifier = 0.25;\n\n            //this.playerModel.energy = 50;\n            //this.playerModel.satiety = 50;\n\n            return;\n        }\n\n        if( this.playerModel.health > 0 ) {\n            this.playerModel.reactionModifier = 0.1;\n            this.playerModel.strategyModifier = 0.1;\n            this.playerModel.synergyModifier = 0.1;\n            this.playerModel.moodModifier = 0.1;\n\n            //this.playerModel.energy = 30;\n            //this.playerModel.satiety = 30;\n\n            return;\n        }\n\n        //TODO: End game\n    }\n\n    // private checkWhetherPlayerWillSurvive(value: number): boolean {\n    //     return this.playerModel.health - value > 0;\n    // }\n\n    private checkWhetherPlayerAlive(): void  {\n        if( this.playerModel.health <= 0 ) {\n            //TODO: End game\n        }\n    }\n\n    //TODO: Add CUP values\n}","import {InitialValuesConfig} from \"../configs/InitialValuesConfig\";\n\nexport class PlayerModel {\n    get healthModifier(): number {\n        return this._healthModifier;\n    }\n\n    set healthModifier(value: number) {\n        this._healthModifier = value;\n    }\n\n    get timeModifier(): number {\n        return this._timeModifier;\n    }\n\n    set timeModifier(value: number) {\n        this._timeModifier = value;\n    }\n\n    get energyModifier(): number {\n        return this._energyModifier;\n    }\n\n    set energyModifier(value: number) {\n        this._energyModifier = value;\n    }\n\n    get satietyModifier(): number {\n        return this._satietyModifier;\n    }\n\n    set satietyModifier(value: number) {\n        this._satietyModifier = value;\n    }\n\n    get moodModifier(): number {\n        return this._moodModifier;\n    }\n\n    set moodModifier(value: number) {\n        this._moodModifier = value;\n    }\n\n    get reactionModifier(): number {\n        return this._reactionModifier;\n    }\n\n    set reactionModifier(value: number) {\n        this._reactionModifier = value;\n    }\n\n    get strategyModifier(): number {\n        return this._strategyModifier;\n    }\n\n    set strategyModifier(value: number) {\n        this._strategyModifier = value;\n    }\n\n    get synergyModifier(): number {\n        return this._synergyModifier;\n    }\n\n    set synergyModifier(value: number) {\n        this._synergyModifier = value;\n    }\n\n    get health(): number {\n        return this._health;\n    }\n\n    set health(value: number) {\n        this._health = value;\n    }\n\n    get time(): number {\n        return this._time;\n    }\n\n    set time(value: number) {\n        this._time = value;\n    }\n\n    get energy(): number {\n        return this._energy;\n    }\n\n    set energy(value: number) {\n        this._energy = value;\n    }\n\n    get satiety(): number {\n        return this._satiety;\n    }\n\n    set satiety(value: number) {\n        this._satiety = value;\n    }\n\n    get mood(): number {\n        return this._mood;\n    }\n\n    set mood(value: number) {\n        this._mood = value;\n    }\n\n    get reaction(): number {\n        return this._reaction;\n    }\n\n    set reaction(value: number) {\n        this._reaction = value;\n    }\n\n    get strategy(): number {\n        return this._strategy;\n    }\n\n    set strategy(value: number) {\n        this._strategy = value;\n    }\n\n    get synergy(): number {\n        return this._synergy;\n    }\n\n    set synergy(value: number) {\n        this._synergy = value;\n    }\n\n    private _health: number;\n    private _time: number;\n    private _energy: number;\n    private _satiety: number;\n    private _mood: number;\n    private _reaction: number;\n    private _strategy: number;\n    private _synergy: number;\n\n    private _healthModifier: number;\n    private _timeModifier: number;\n    private _energyModifier: number;\n    private _satietyModifier: number;\n    private _moodModifier: number;\n    private _reactionModifier: number;\n    private _strategyModifier: number;\n    private _synergyModifier: number;\n\n    constructor() {\n        this.init();\n    }\n\n    private init(): void {\n        this._health = InitialValuesConfig.health;\n        this._time = InitialValuesConfig.time;\n        this._energy = InitialValuesConfig.energy;\n        this._satiety = InitialValuesConfig.satiety;\n        this._mood = InitialValuesConfig.mood;\n        this._reaction = InitialValuesConfig.reaction;\n        this._strategy = InitialValuesConfig.strategy;\n        this._synergy = InitialValuesConfig.synergy;\n\n        this._healthModifier = InitialValuesConfig.healthModifier;\n        this._timeModifier = InitialValuesConfig.timeModifier;\n        this._energyModifier = InitialValuesConfig.energyModifier;\n        this._satietyModifier = InitialValuesConfig.satietyModifier;\n        this._moodModifier = InitialValuesConfig.moodModifier;\n        this._reactionModifier = InitialValuesConfig.reactionModifier;\n        this._strategyModifier = InitialValuesConfig.strategyModifier;\n        this._synergyModifier = InitialValuesConfig.synergyModifier;\n    }\n\n    // TODO: Resolve issue\n    // private static _instance: PlayerModel = new PlayerModel();\n    //\n    // constructor() {\n    //     if( PlayerModel._instance ) {\n    //         return;\n    //     }\n    //\n    //     PlayerModel._instance = this;\n    // }\n    //\n    // public getInstance(): PlayerModel {\n    //     return this._instance;\n    // }\n}","import {InitialValuesConfig} from \"../configs/InitialValuesConfig\";\nimport {Utils} from \"../../utils/Utils\";\n\nexport class PlayerView {\n    set energy(value: string) {\n        this._energy.text = value;\n    }\n\n    set satiety(value: string) {\n        this._satiety.text = value;\n    }\n\n    set mood(value: string) {\n        this._mood.text = value;\n    }\n\n    set health(value: string) {\n        this._health.text = value;\n    }\n\n    set reaction(value: string) {\n        this._reaction.text = value;\n    }\n\n    set strategy(value: string) {\n        this._strategy.text = value;\n    }\n\n    set synergy(value: string) {\n        this._synergy.text = value;\n    }\n\n    private _energy: PIXI.Text;\n    private _satiety: PIXI.Text;\n    private _mood: PIXI.Text;\n    private _health: PIXI.Text;\n    private _reaction: PIXI.Text;\n    private _strategy: PIXI.Text;\n    private _synergy: PIXI.Text;\n\n    public view: PIXI.Container;\n\n    constructor() {\n        this.init();\n    }\n\n    private init(): void {\n        this.createView();\n        this.addInitialStats();\n    }\n\n    private createView(): void {\n        this.view = new PIXI.Container();\n    }\n\n    private addInitialStats(): void {\n        const textStyle = Utils.getTextStyle();\n\n        let energy: PIXI.Text = new PIXI.Text(InitialValuesConfig.energy.toString(), textStyle);\n        let satiety: PIXI.Text = new PIXI.Text(InitialValuesConfig.satiety.toString(), textStyle);\n        let mood: PIXI.Text = new PIXI.Text(InitialValuesConfig.mood.toString(), textStyle);\n        let health: PIXI.Text = new PIXI.Text(InitialValuesConfig.health.toString(), textStyle);\n        let reaction: PIXI.Text = new PIXI.Text(InitialValuesConfig.reaction.toString(), textStyle);\n        let strategy: PIXI.Text = new PIXI.Text(InitialValuesConfig.strategy.toString(), textStyle);\n        let synergy: PIXI.Text = new PIXI.Text(InitialValuesConfig.synergy.toString(), textStyle);\n\n        energy.position.set(548, 31);\n        satiety.position.set(548, 114);\n        mood.position.set(548, 193);\n        health.position.set(548, 275);\n        reaction.position.set(1313, 63);\n        strategy.position.set(1313, 166);\n        synergy.position.set(1313, 268);\n\n        this.view.addChild(\n            energy,\n            satiety,\n            mood,\n            health,\n            reaction,\n            strategy,\n            synergy\n        );\n    }\n}","import {Utils} from \"../../utils/Utils\";\nimport {IPlayerStats} from \"../interfaces/IPlayerStats\";\nimport {PlayerView} from \"../../player/view/PlayerView\";\n\nexport class TaskView extends PIXI.Container {\n    private PlayerView: PlayerView;\n\n    constructor(title: string, description: string, changes: IPlayerStats) {\n        super();\n\n        const textStyle = Utils.getTextStyle();\n\n        let titleText: PIXI.Text = new PIXI.Text(title, textStyle);\n        titleText.position.x = 0;\n        titleText.interactive = true;\n        titleText.buttonMode = true;\n        titleText.on(\"pointertap\", () => {\n            this.setTaskCallback(changes);\n        });\n\n        let descriptionText: PIXI.Text = new PIXI.Text(description, textStyle);\n        descriptionText.position.x = 700;\n\n        let taskContainer: PIXI.Container = new PIXI.Container();\n\n        taskContainer.addChild(\n            titleText,\n            descriptionText\n        );\n\n        this.addChild(taskContainer);\n    }\n\n    private setTaskCallback(changes: IPlayerStats): void {\n        // TODO: Add update on changes\n\n        // model.health -= changes.health / 10;\n        // model.time -= changes.time / 10;\n        // model.energy -= changes.energy / 10;\n        // model.satiety -= changes.satiety / 10;\n        // model.mood -= changes.mood / 10;\n        // model.reaction -= changes.reaction / 10;\n        // model.strategy -= changes.strategy / 10;\n        // model.synergy -= changes.synergy / 10;\n    }\n}","import {Utils} from \"../../utils/Utils\";\nimport {TaskView} from \"./TaskView\";\nimport {ITaskData} from \"../interfaces/ITaskData\";\n\nexport class TasksView {\n    public view: PIXI.Container;\n\n    private gameData: Array<any>;\n\n    constructor() {\n        this.init();\n    }\n\n    public init(): void {\n        this.createView();\n\n        this.parseGameData().then(() => {\n            this.addTasks();\n        });\n    }\n\n    private createView(): void {\n        this.view = new PIXI.Container();\n        this.view.position.set(15, 350);\n    }\n\n    private async parseGameData(): Promise<any> {\n        await new Promise((resolve) => {\n            Utils.loadJSON((response) => {\n                this.gameData = JSON.parse(response);\n\n                resolve();\n            });\n        });\n    }\n\n    private addTasks(): void {\n        let offsetY: number = 0;\n\n        const categories = Object.entries(this.gameData);\n\n        for( let i = 0; i < categories.length; i++ ) {\n            let tasks = Object.entries(categories[i][1]);\n\n            for( let j = 0; j < tasks.length; j++ ) {\n                offsetY += 40;\n\n                let task: ITaskData = tasks[j][1] as ITaskData;\n\n                let taskView: TaskView = new TaskView(\n                    task.title,\n                    task.description,\n                    task.changes\n                );\n\n                taskView.position.y = offsetY;\n\n                this.view.addChild(taskView);\n            }\n        }\n    }\n}","import {GameConstants} from \"../../../GameConstants\";\n\nexport class UIView {\n    public view: PIXI.Container;\n\n    constructor() {\n        this.init();\n    }\n\n    private init(): void {\n        this.createView();\n        this.addBackground();\n    }\n\n    private createView(): void {\n        this.view = new PIXI.Container();\n\n        this.view.scale.set(\n            GameConstants.rootContainer.width / GameConstants.backgroundSize.heigth,\n            GameConstants.rootContainer.height / GameConstants.backgroundSize.width\n        );\n    }\n\n    private addBackground(): void {\n        this.view.addChild(PIXI.Sprite.from('data/assets/background.jpg'));\n    }\n}","import {GameConstants} from \"../../GameConstants\";\n\nexport class Utils {\n    public static loadJSON(callback) {\n        let xObj = new XMLHttpRequest();\n        xObj.overrideMimeType(\"application/json\");\n        xObj.open('GET', 'GameData.json', true);\n        xObj.onreadystatechange = function() {\n            if( xObj.readyState == 4 && xObj.status == 200 ) {\n                callback(xObj.responseText);\n            }\n        }\n\n        xObj.send(null);\n    }\n\n    public static getTextStyle(): PIXI.TextStyle {\n        return new PIXI.TextStyle({\n            align: GameConstants.textStyle.align,\n            fontSize: GameConstants.textStyle.fontSize\n        });\n    }\n\n    public static getRandomNumber(): number {\n        return Math.floor(Math.random() * 101);\n    }\n}"],"sourceRoot":""}