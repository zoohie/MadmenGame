{"version":3,"sources":["webpack:///../pixi-gl-core/src/GLBuffer.js","webpack:///../pixi-gl-core/src/GLFramebuffer.js","webpack:///../pixi-gl-core/src/GLShader.js","webpack:///../pixi-gl-core/src/GLTexture.js","webpack:///../pixi-gl-core/src/VertexArrayObject.js","webpack:///../pixi-gl-core/src/createContext.js","webpack:///../pixi-gl-core/src/index.js","webpack:///../pixi-gl-core/src/setVertexAttribArrays.js","webpack:///../pixi-gl-core/src/shader/compileProgram.js","webpack:///../pixi-gl-core/src/shader/defaultValue.js","webpack:///../pixi-gl-core/src/shader/extractAttributes.js","webpack:///../pixi-gl-core/src/shader/extractUniforms.js","webpack:///../pixi-gl-core/src/shader/generateUniformAccessObject.js","webpack:///../pixi-gl-core/src/shader/index.js","webpack:///../pixi-gl-core/src/shader/mapSize.js","webpack:///../pixi-gl-core/src/shader/mapType.js","webpack:///../pixi-gl-core/src/shader/setPrecision.js"],"names":["EMPTY_ARRAY_BUFFER","ArrayBuffer","Buffer","gl","type","data","drawType","this","buffer","createBuffer","ARRAY_BUFFER","STATIC_DRAW","upload","_updateID","prototype","offset","dontBind","bind","byteLength","bufferSubData","bufferData","bindBuffer","createVertexBuffer","createIndexBuffer","ELEMENT_ARRAY_BUFFER","create","destroy","deleteBuffer","module","exports","Texture","Framebuffer","width","height","framebuffer","createFramebuffer","stencil","texture","enableTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","TEXTURE_2D","enableStencil","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","renderbufferStorage","DEPTH_STENCIL","clear","r","g","b","a","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bindFramebuffer","unbind","resize","uploadData","deleteFramebuffer","createRGBA","fromData","enableNearestScaling","enableWrapClamp","fbo","createFloat32","compileProgram","extractAttributes","extractUniforms","setPrecision","generateUniformAccessObject","Shader","vertexSrc","fragmentSrc","precision","attributeLocations","program","attributes","uniformData","uniforms","useProgram","deleteProgram","format","createTexture","mipmap","premultiplyAlpha","RGBA","UNSIGNED_BYTE","source","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","newWidth","videoWidth","newHeight","videoHeight","texImage2D","texSubImage2D","FLOATING_POINT_AVAILABLE","Float32Array","getExtension","Error","FLOAT","location","undefined","activeTexture","TEXTURE0","bindTexture","minFilter","linear","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR","NEAREST","magFilter","TEXTURE_MAG_FILTER","enableMipmap","generateMipmap","enableLinearScaling","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enableWrapRepeat","REPEAT","enableWrapMirrorRepeat","MIRRORED_REPEAT","deleteTexture","fromSource","setVertexAttribArrays","VertexArrayObject","state","nativeVaoExtension","FORCE_NATIVE","nativeState","nativeVao","createVertexArrayOES","maxAttribs","getParameter","MAX_VERTEX_ATTRIBS","tempAttribState","Array","attribState","indexBuffer","dirty","constructor","bindVertexArrayOES","activate","lastBuffer","i","length","attrib","vertexAttribPointer","attribute","size","normalized","stride","start","addAttribute","push","addIndex","draw","drawElements","UNSIGNED_SHORT","drawArrays","getSize","deleteVertexArrayOES","canvas","options","getContext","createContext","GLBuffer","GLFramebuffer","GLShader","GLTexture","shader","window","PIXI","glCore","attribs","enableVertexAttribArray","disableVertexAttribArray","compileShader","src","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","glVertShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","error","VALIDATE_STATUS","getError","getProgramInfoLog","warn","deleteShader","booleanArray","array","Int32Array","mapType","mapSize","pointer","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","name","getAttribLocation","defaultValue","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","replace","getUniformLocation","value","generateGetter","GLSL_SINGLE_SETTERS","float","uniform1f","vec2","uniform2f","vec3","uniform3f","vec4","uniform4f","int","uniform1i","ivec2","uniform2i","ivec3","uniform3i","ivec4","uniform4i","bool","bvec2","bvec3","bvec4","mat2","uniformMatrix2fv","mat3","uniformMatrix3fv","mat4","uniformMatrix4fv","sampler2D","GLSL_ARRAY_SETTERS","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","generateSetter","uniform","getUniformGroup","nameTokens","cur","o","uniformKeys","Object","keys","fullName","split","uniformGroup","defineProperty","get","set","GLSL_TO_SIZE","GL_TABLE","GL_TO_GLSL_TYPES","typeNames","tn","substring"],"mappings":"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","file":"js/npm.pixi-gl-core.ead32ea28a742751815f.js","sourcesContent":["var EMPTY_ARRAY_BUFFER = new ArrayBuffer(0);\n\n/**\n * Helper class to create a webGL buffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param type {gl.ARRAY_BUFFER | gl.ELEMENT_ARRAY_BUFFER} @mat\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n * @param drawType {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n */\nvar Buffer = function(gl, type, data, drawType)\n{\n\n\t/**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n\tthis.gl = gl;\n\n\t/**\n     * The WebGL buffer, created upon instantiation\n     *\n     * @member {WebGLBuffer}\n     */\n\tthis.buffer = gl.createBuffer();\n\n\t/**\n     * The type of the buffer\n     *\n     * @member {gl.ARRAY_BUFFER|gl.ELEMENT_ARRAY_BUFFER}\n     */\n\tthis.type = type || gl.ARRAY_BUFFER;\n\n\t/**\n     * The draw type of the buffer\n     *\n     * @member {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n     */\n\tthis.drawType = drawType || gl.STATIC_DRAW;\n\n\t/**\n     * The data in the buffer, as a typed array\n     *\n     * @member {ArrayBuffer| SharedArrayBuffer|ArrayBufferView}\n     */\n\tthis.data = EMPTY_ARRAY_BUFFER;\n\n\tif(data)\n\t{\n\t\tthis.upload(data);\n\t}\n\n\tthis._updateID = 0;\n};\n\n/**\n * Uploads the buffer to the GPU\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data to upload\n * @param offset {Number} if only a subset of the data should be uploaded, this is the amount of data to subtract\n * @param dontBind {Boolean} whether to bind the buffer before uploading it\n */\nBuffer.prototype.upload = function(data, offset, dontBind)\n{\n\t// todo - needed?\n\tif(!dontBind) this.bind();\n\n\tvar gl = this.gl;\n\n\tdata = data || this.data;\n\toffset = offset || 0;\n\n\tif(this.data.byteLength >= data.byteLength)\n\t{\n\t\tgl.bufferSubData(this.type, offset, data);\n\t}\n\telse\n\t{\n\t\tgl.bufferData(this.type, data, this.drawType);\n\t}\n\n\tthis.data = data;\n};\n/**\n * Binds the buffer\n *\n */\nBuffer.prototype.bind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindBuffer(this.type, this.buffer);\n};\n\nBuffer.createVertexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.createIndexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ELEMENT_ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.create = function(gl, type, data, drawType)\n{\n\treturn new Buffer(gl, type, data, drawType);\n};\n\n/**\n * Destroys the buffer\n *\n */\nBuffer.prototype.destroy = function(){\n\tthis.gl.deleteBuffer(this.buffer);\n};\n\nmodule.exports = Buffer;\n","\nvar Texture = require('./GLTexture');\n\n/**\n * Helper class to create a webGL Framebuffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n */\nvar Framebuffer = function(gl, width, height)\n{\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * The frame buffer\n     *\n     * @member {WebGLFramebuffer}\n     */\n    this.framebuffer = gl.createFramebuffer();\n\n    /**\n     * The stencil buffer\n     *\n     * @member {WebGLRenderbuffer}\n     */\n    this.stencil = null;\n\n    /**\n     * The stencil buffer\n     *\n     * @member {PIXI.glCore.GLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * The width of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.width = width || 100;\n    /**\n     * The height of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.height = height || 100;\n};\n\n/**\n * Adds a texture to the frame buffer\n * @param texture {PIXI.glCore.GLTexture}\n */\nFramebuffer.prototype.enableTexture = function(texture)\n{\n    var gl = this.gl;\n\n    this.texture = texture || new Texture(gl);\n\n    this.texture.bind();\n\n    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n    this.bind();\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n};\n\n/**\n * Initialises the stencil buffer\n */\nFramebuffer.prototype.enableStencil = function()\n{\n    if(this.stencil)return;\n\n    var gl = this.gl;\n\n    this.stencil = gl.createRenderbuffer();\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n\n    // TODO.. this is depth AND stencil?\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.stencil);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL,  this.width  , this.height );\n\n\n};\n\n/**\n * Erases the drawing area and fills it with a colour\n * @param  r {Number} the red value of the clearing colour\n * @param  g {Number} the green value of the clearing colour\n * @param  b {Number} the blue value of the clearing colour\n * @param  a {Number} the alpha value of the clearing colour\n */\nFramebuffer.prototype.clear = function( r, g, b, a )\n{\n    this.bind();\n\n    var gl = this.gl;\n\n    gl.clearColor(r, g, b, a);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n};\n\n/**\n * Binds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.bind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer );\n};\n\n/**\n * Unbinds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.unbind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null );\n};\n/**\n * Resizes the drawing area of the buffer to the given width and height\n * @param  width  {Number} the new width\n * @param  height {Number} the new height\n */\nFramebuffer.prototype.resize = function(width, height)\n{\n    var gl = this.gl;\n\n    this.width = width;\n    this.height = height;\n\n    if ( this.texture )\n    {\n        this.texture.uploadData(null, width, height);\n    }\n\n    if ( this.stencil )\n    {\n        // update the stencil buffer width and height\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\n    }\n};\n\n/**\n * Destroys this buffer\n */\nFramebuffer.prototype.destroy = function()\n{\n    var gl = this.gl;\n\n    //TODO\n    if(this.texture)\n    {\n        this.texture.destroy();\n    }\n\n    gl.deleteFramebuffer(this.framebuffer);\n\n    this.gl = null;\n\n    this.stencil = null;\n    this.texture = null;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createRGBA = function(gl, width, height, data)\n{\n    var texture = Texture.fromData(gl, null, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n    //fbo.enableStencil(); // get this back on soon!\n\n    //fbo.enableStencil(); // get this back on soon!\n\n    fbo.unbind();\n\n    return fbo;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createFloat32 = function(gl, width, height, data)\n{\n    // create a new texture..\n    var texture = new Texture.fromData(gl, data, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n\n    fbo.unbind();\n\n    return fbo;\n};\n\nmodule.exports = Framebuffer;\n","\nvar compileProgram = require('./shader/compileProgram'),\n\textractAttributes = require('./shader/extractAttributes'),\n\textractUniforms = require('./shader/extractUniforms'),\n\tsetPrecision = require('./shader/setPrecision'),\n\tgenerateUniformAccessObject = require('./shader/generateUniformAccessObject');\n\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param precision {string} The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n * @param attributeLocations {object} A key value pair showing which location eact attribute should sit eg {position:0, uvs:1}\n */\nvar Shader = function(gl, vertexSrc, fragmentSrc, precision, attributeLocations)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\tif(precision)\n\t{\n\t\tvertexSrc = setPrecision(vertexSrc, precision);\n\t\tfragmentSrc = setPrecision(fragmentSrc, precision);\n\t}\n\n\t/**\n\t * The shader program\n\t *\n\t * @member {WebGLProgram}\n\t */\n\t// First compile the program..\n\tthis.program = compileProgram(gl, vertexSrc, fragmentSrc, attributeLocations);\n\n\t/**\n\t * The attributes of the shader as an object containing the following properties\n\t * {\n\t * \ttype,\n\t * \tsize,\n\t * \tlocation,\n\t * \tpointer\n\t * }\n\t * @member {Object}\n\t */\n\t// next extract the attributes\n\tthis.attributes = extractAttributes(gl, this.program);\n\n    this.uniformData = extractUniforms(gl, this.program);\n\n\t/**\n\t * The uniforms of the shader as an object containing the following properties\n\t * {\n\t * \tgl,\n\t * \tdata\n\t * }\n\t * @member {Object}\n\t */\n\tthis.uniforms = generateUniformAccessObject( gl, this.uniformData );\n\n};\n/**\n * Uses this shader\n * \n * @return {PIXI.glCore.GLShader} Returns itself.\n */\nShader.prototype.bind = function()\n{\n\tthis.gl.useProgram(this.program);\n\treturn this;\n};\n\n/**\n * Destroys this shader\n * TODO\n */\nShader.prototype.destroy = function()\n{\n\tthis.attributes = null;\n\tthis.uniformData = null;\n\tthis.uniforms = null;\n\n\tvar gl = this.gl;\n\tgl.deleteProgram(this.program);\n};\n\n\nmodule.exports = Shader;\n","\n/**\n * Helper class to create a WebGL Texture\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param width {number} the width of the texture\n * @param height {number} the height of the texture\n * @param format {number} the pixel format of the texture. defaults to gl.RGBA\n * @param type {number} the gl type of the texture. defaults to gl.UNSIGNED_BYTE\n */\nvar Texture = function(gl, width, height, format, type)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\n\t/**\n\t * The WebGL texture\n\t *\n\t * @member {WebGLTexture}\n\t */\n\tthis.texture = gl.createTexture();\n\n\t/**\n\t * If mipmapping was used for this texture, enable and disable with enableMipmap()\n\t *\n\t * @member {Boolean}\n\t */\n\t// some settings..\n\tthis.mipmap = false;\n\n\n\t/**\n\t * Set to true to enable pre-multiplied alpha\n\t *\n\t * @member {Boolean}\n\t */\n\tthis.premultiplyAlpha = false;\n\n\t/**\n\t * The width of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.width = width || -1;\n\t/**\n\t * The height of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.height = height || -1;\n\n\t/**\n\t * The pixel format of the texture. defaults to gl.RGBA\n\t *\n\t * @member {Number}\n\t */\n\tthis.format = format || gl.RGBA;\n\n\t/**\n\t * The gl type of the texture. defaults to gl.UNSIGNED_BYTE\n\t *\n\t * @member {Number}\n\t */\n\tthis.type = type || gl.UNSIGNED_BYTE;\n\n\n};\n\n/**\n * Uploads this texture to the GPU\n * @param source {HTMLImageElement|ImageData|HTMLVideoElement} the source image of the texture\n */\nTexture.prototype.upload = function(source)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\tvar newWidth = source.videoWidth || source.width;\n\tvar newHeight = source.videoHeight || source.height;\n\n\tif(newHeight !== this.height || newWidth !== this.width)\n\t{\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, source);\n\t}\n\telse\n\t{\n    \tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.format, this.type, source);\n\t}\n\n\t// if the source is a video, we need to use the videoWidth / videoHeight properties as width / height will be incorrect.\n\tthis.width = newWidth;\n\tthis.height = newHeight;\n\n};\n\nvar FLOATING_POINT_AVAILABLE = false;\n\n/**\n * Use a data source and uploads this texture to the GPU\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.prototype.uploadData = function(data, width, height)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tif(data instanceof Float32Array)\n\t{\n\t\tif(!FLOATING_POINT_AVAILABLE)\n\t\t{\n\t\t\tvar ext = gl.getExtension(\"OES_texture_float\");\n\n\t\t\tif(ext)\n\t\t\t{\n\t\t\t\tFLOATING_POINT_AVAILABLE = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new Error('floating point textures not available');\n\t\t\t}\n\t\t}\n\n\t\tthis.type = gl.FLOAT;\n\t}\n\telse\n\t{\n\t\t// TODO support for other types\n\t\tthis.type = this.type || gl.UNSIGNED_BYTE;\n\t}\n\n\t// what type of data?\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\n\tif(width !== this.width || height !== this.height)\n\t{\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format,  width, height, 0, this.format, this.type, data || null);\n\t}\n\telse\n\t{\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, this.format, this.type, data || null);\n\t}\n\n\tthis.width = width;\n\tthis.height = height;\n\n\n//\ttexSubImage2D\n};\n\n/**\n * Binds the texture\n * @param  location\n */\nTexture.prototype.bind = function(location)\n{\n\tvar gl = this.gl;\n\n\tif(location !== undefined)\n\t{\n\t\tgl.activeTexture(gl.TEXTURE0 + location);\n\t}\n\n\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n};\n\n/**\n * Unbinds the texture\n */\nTexture.prototype.unbind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.minFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tif(this.mipmap)\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n\t}\n\telse\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n\t}\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.magFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n};\n\n/**\n * Enables mipmapping\n */\nTexture.prototype.enableMipmap = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tthis.mipmap = true;\n\n\tgl.generateMipmap(gl.TEXTURE_2D);\n};\n\n/**\n * Enables linear filtering\n */\nTexture.prototype.enableLinearScaling = function()\n{\n\tthis.minFilter(true);\n\tthis.magFilter(true);\n};\n\n/**\n * Enables nearest neighbour interpolation\n */\nTexture.prototype.enableNearestScaling = function()\n{\n\tthis.minFilter(false);\n\tthis.magFilter(false);\n};\n\n/**\n * Enables clamping on the texture so WebGL will not repeat it\n */\nTexture.prototype.enableWrapClamp = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n};\n\n/**\n * Enable tiling on the texture\n */\nTexture.prototype.enableWrapRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n};\n\nTexture.prototype.enableWrapMirrorRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\n};\n\n\n/**\n * Destroys this texture\n */\nTexture.prototype.destroy = function()\n{\n\tvar gl = this.gl;\n\t//TODO\n\tgl.deleteTexture(this.texture);\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param source {HTMLImageElement|ImageData} the source image of the texture\n * @param premultiplyAlpha {Boolean} If we want to use pre-multiplied alpha\n */\nTexture.fromSource = function(gl, source, premultiplyAlpha)\n{\n\tvar texture = new Texture(gl);\n\ttexture.premultiplyAlpha = premultiplyAlpha || false;\n\ttexture.upload(source);\n\n\treturn texture;\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.fromData = function(gl, data, width, height)\n{\n\t//console.log(data, width, height);\n\tvar texture = new Texture(gl);\n\ttexture.uploadData(data, width, height);\n\n\treturn texture;\n};\n\n\nmodule.exports = Texture;\n","\n// state object//\nvar setVertexAttribArrays = require( './setVertexAttribArrays' );\n\n/**\n * Helper class to work with WebGL VertexArrayObjects (vaos)\n * Only works if WebGL extensions are enabled (they usually are)\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n */\nfunction VertexArrayObject(gl, state)\n{\n    this.nativeVaoExtension = null;\n\n    if(!VertexArrayObject.FORCE_NATIVE)\n    {\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') ||\n                                  gl.getExtension('MOZ_OES_vertex_array_object') ||\n                                  gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    this.nativeState = state;\n\n    if(this.nativeVaoExtension)\n    {\n        this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\n\n        var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        // VAO - overwrite the state..\n        this.nativeState = {\n            tempAttribState: new Array(maxAttribs),\n            attribState: new Array(maxAttribs)\n        };\n    }\n\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of attributes\n     *\n     * @member {Array}\n     */\n    this.attributes = [];\n\n    /**\n     * @member {PIXI.glCore.GLBuffer}\n     */\n    this.indexBuffer = null;\n\n    /**\n     * A boolean flag\n     *\n     * @member {Boolean}\n     */\n    this.dirty = false;\n}\n\nVertexArrayObject.prototype.constructor = VertexArrayObject;\nmodule.exports = VertexArrayObject;\n\n/**\n* Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n* If you find on older devices that things have gone a bit weird then set this to true.\n*/\n/**\n * Lets the VAO know if you should use the WebGL extension or the native methods.\n * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n * If you find on older devices that things have gone a bit weird then set this to true.\n * @static\n * @property {Boolean} FORCE_NATIVE\n */\nVertexArrayObject.FORCE_NATIVE = false;\n\n/**\n * Binds the buffer\n */\nVertexArrayObject.prototype.bind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n\n        if(this.dirty)\n        {\n            this.dirty = false;\n            this.activate();\n            return this;\n        }\n        if (this.indexBuffer)\n        {\n            this.indexBuffer.bind();\n        }\n    }\n    else\n    {\n        this.activate();\n    }\n\n    return this;\n};\n\n/**\n * Unbinds the buffer\n */\nVertexArrayObject.prototype.unbind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(null);\n    }\n\n    return this;\n};\n\n/**\n * Uses this vao\n */\nVertexArrayObject.prototype.activate = function()\n{\n\n    var gl = this.gl;\n    var lastBuffer = null;\n\n    for (var i = 0; i < this.attributes.length; i++)\n    {\n        var attrib = this.attributes[i];\n\n        if(lastBuffer !== attrib.buffer)\n        {\n            attrib.buffer.bind();\n            lastBuffer = attrib.buffer;\n        }\n\n        gl.vertexAttribPointer(attrib.attribute.location,\n                               attrib.attribute.size,\n                               attrib.type || gl.FLOAT,\n                               attrib.normalized || false,\n                               attrib.stride || 0,\n                               attrib.start || 0);\n    }\n\n    setVertexAttribArrays(gl, this.attributes, this.nativeState);\n\n    if(this.indexBuffer)\n    {\n        this.indexBuffer.bind();\n    }\n\n    return this;\n};\n\n/**\n *\n * @param buffer     {PIXI.gl.GLBuffer}\n * @param attribute  {*}\n * @param type       {String}\n * @param normalized {Boolean}\n * @param stride     {Number}\n * @param start      {Number}\n */\nVertexArrayObject.prototype.addAttribute = function(buffer, attribute, type, normalized, stride, start)\n{\n    this.attributes.push({\n        buffer:     buffer,\n        attribute:  attribute,\n\n        location:   attribute.location,\n        type:       type || this.gl.FLOAT,\n        normalized: normalized || false,\n        stride:     stride || 0,\n        start:      start || 0\n    });\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n *\n * @param buffer   {PIXI.gl.GLBuffer}\n */\nVertexArrayObject.prototype.addIndex = function(buffer/*, options*/)\n{\n    this.indexBuffer = buffer;\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Unbinds this vao and disables it\n */\nVertexArrayObject.prototype.clear = function()\n{\n    // var gl = this.gl;\n\n    // TODO - should this function unbind after clear?\n    // for now, no but lets see what happens in the real world!\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n    }\n\n    this.attributes.length = 0;\n    this.indexBuffer = null;\n\n    return this;\n};\n\n/**\n * @param type  {Number}\n * @param size  {Number}\n * @param start {Number}\n */\nVertexArrayObject.prototype.draw = function(type, size, start)\n{\n    var gl = this.gl;\n\n    if(this.indexBuffer)\n    {\n        gl.drawElements(type, size || this.indexBuffer.data.length, gl.UNSIGNED_SHORT, (start || 0) * 2 );\n    }\n    else\n    {\n        // TODO need a better way to calculate size..\n        gl.drawArrays(type, start, size || this.getSize());\n    }\n\n    return this;\n};\n\n/**\n * Destroy this vao\n */\nVertexArrayObject.prototype.destroy = function()\n{\n    // lose references\n    this.gl = null;\n    this.indexBuffer = null;\n    this.attributes = null;\n    this.nativeState = null;\n\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\n    }\n\n    this.nativeVaoExtension = null;\n    this.nativeVao = null;\n};\n\nVertexArrayObject.prototype.getSize = function()\n{\n    var attrib = this.attributes[0];\n    return attrib.buffer.data.length / (( attrib.stride/4 ) || attrib.attribute.size);\n};\n","\n/**\n * Helper class to create a webGL Context\n *\n * @class\n * @memberof PIXI.glCore\n * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\n * @param options {Object} An options object that gets passed in to the canvas element containing the context attributes,\n *                         see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext for the options available\n * @return {WebGLRenderingContext} the WebGL context\n */\nvar createContext = function(canvas, options)\n{\n    var gl = canvas.getContext('webgl', options) || \n         canvas.getContext('experimental-webgl', options);\n\n    if (!gl)\n    {\n        // fail, not able to get a context\n        throw new Error('This browser does not support webGL. Try using the canvas renderer');\n    }\n\n    return gl;\n};\n\nmodule.exports = createContext;\n","var gl = {\n    createContext:          require('./createContext'),\n    setVertexAttribArrays:  require('./setVertexAttribArrays'),\n    GLBuffer:               require('./GLBuffer'),\n    GLFramebuffer:          require('./GLFramebuffer'),\n    GLShader:               require('./GLShader'),\n    GLTexture:              require('./GLTexture'),\n    VertexArrayObject:      require('./VertexArrayObject'),\n    shader:                 require('./shader')\n};\n\n// Export for Node-compatible environments\nif (typeof module !== 'undefined' && module.exports)\n{\n    // Export the module\n    module.exports = gl;\n}\n\n// Add to the browser window pixi.gl\nif (typeof window !== 'undefined')\n{\n    // add the window object\n    window.PIXI = window.PIXI || {};\n    window.PIXI.glCore = gl;\n}\n","// var GL_MAP = {};\n\n/**\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param attribs {*}\n * @param state {*}\n */\nvar setVertexAttribArrays = function (gl, attribs, state)\n{\n    var i;\n    if(state)\n    {\n        var tempAttribState = state.tempAttribState,\n            attribState = state.attribState;\n\n        for (i = 0; i < tempAttribState.length; i++)\n        {\n            tempAttribState[i] = false;\n        }\n\n        // set the new attribs\n        for (i = 0; i < attribs.length; i++)\n        {\n            tempAttribState[attribs[i].attribute.location] = true;\n        }\n\n        for (i = 0; i < attribState.length; i++)\n        {\n            if (attribState[i] !== tempAttribState[i])\n            {\n                attribState[i] = tempAttribState[i];\n\n                if (state.attribState[i])\n                {\n                    gl.enableVertexAttribArray(i);\n                }\n                else\n                {\n                    gl.disableVertexAttribArray(i);\n                }\n            }\n        }\n\n    }\n    else\n    {\n        for (i = 0; i < attribs.length; i++)\n        {\n            var attrib = attribs[i];\n            gl.enableVertexAttribArray(attrib.attribute.location);\n        }\n    }\n};\n\nmodule.exports = setVertexAttribArrays;\n","\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\n * @return {WebGLProgram} the shader program\n */\nvar compileProgram = function(gl, vertexSrc, fragmentSrc, attributeLocations)\n{\n    var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, glVertShader);\n    gl.attachShader(program, glFragShader);\n\n    // optionally, set the attributes manually for the program rather than letting WebGL decide..\n    if(attributeLocations)\n    {\n        for(var i in attributeLocations)\n        {\n            gl.bindAttribLocation(program, attributeLocations[i], i);\n        }\n    }\n\n\n    gl.linkProgram(program);\n\n    // if linking fails, then log and cleanup\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    {\n        console.error('Pixi.js Error: Could not initialize shader.');\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n        console.error('gl.getError()', gl.getError());\n\n        // if there is a program info log, log it\n        if (gl.getProgramInfoLog(program) !== '')\n        {\n            console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n        }\n\n        gl.deleteProgram(program);\n        program = null;\n    }\n\n    // clean up some shaders\n    gl.deleteShader(glVertShader);\n    gl.deleteShader(glFragShader);\n\n    return program;\n};\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nvar compileShader = function (gl, type, src)\n{\n    var shader = gl.createShader(type);\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    {\n        console.log(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\nmodule.exports = compileProgram;\n","/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */\nvar defaultValue = function(type, size) \n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2': \n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':     \n            return new Float32Array(4 * size);\n            \n        case 'int':\n        case 'sampler2D':\n            return 0;\n\n        case 'ivec2':   \n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4': \n            return new Int32Array(4 * size);\n\n        case 'bool':     \n            return false;\n\n        case 'bvec2':\n\n            return booleanArray( 2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                                     0, 1]);\n\n        case 'mat3': \n            return new Float32Array([1, 0, 0,\n                                     0, 1, 0,\n                                     0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                                     0, 1, 0, 0,\n                                     0, 0, 1, 0,\n                                     0, 0, 0, 1]);\n    }\n};\n\nvar booleanArray = function(size)\n{\n    var array = new Array(size);\n\n    for (var i = 0; i < array.length; i++) \n    {\n        array[i] = false;\n    }\n\n    return array;\n};\n\nmodule.exports = defaultValue;\n","\nvar mapType = require('./mapType');\nvar mapSize = require('./mapSize');\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nvar extractAttributes = function(gl, program)\n{\n    var attributes = {};\n\n    var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < totalAttributes; i++)\n    {\n        var attribData = gl.getActiveAttrib(program, i);\n        var type = mapType(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            type:type,\n            size:mapSize(type),\n            location:gl.getAttribLocation(program, attribData.name),\n            //TODO - make an attribute object\n            pointer: pointer\n        };\n    }\n\n    return attributes;\n};\n\nvar pointer = function(type, normalized, stride, start){\n    // console.log(this.location)\n    gl.vertexAttribPointer(this.location,this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n};\n\nmodule.exports = extractAttributes;\n","var mapType = require('./mapType');\nvar defaultValue = require('./defaultValue');\n\n/**\n * Extracts the uniforms\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the uniforms from\n * @return uniforms {Object}\n */\nvar extractUniforms = function(gl, program)\n{\n\tvar uniforms = {};\n\n    var totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < totalUniforms; i++)\n    {\n    \tvar uniformData = gl.getActiveUniform(program, i);\n    \tvar name = uniformData.name.replace(/\\[.*?\\]/, \"\");\n        var type = mapType(gl, uniformData.type );\n\n    \tuniforms[name] = {\n    \t\ttype:type,\n    \t\tsize:uniformData.size,\n    \t\tlocation:gl.getUniformLocation(program, name),\n    \t\tvalue:defaultValue(type, uniformData.size)\n    \t};\n    }\n\n\treturn uniforms;\n};\n\nmodule.exports = extractUniforms;\n","/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param uniforms {Array} @mat ?\n * @return attributes {Object}\n */\nvar generateUniformAccessObject = function(gl, uniformData)\n{\n    // this is the object we will be sending back.\n    // an object hierachy will be created for structs\n    var uniforms = {data:{}};\n\n    uniforms.gl = gl;\n\n    var uniformKeys= Object.keys(uniformData);\n\n    for (var i = 0; i < uniformKeys.length; i++)\n    {\n        var fullName = uniformKeys[i];\n\n        var nameTokens = fullName.split('.');\n        var name = nameTokens[nameTokens.length - 1];\n\n\n        var uniformGroup = getUniformGroup(nameTokens, uniforms);\n\n        var uniform =  uniformData[fullName];\n        uniformGroup.data[name] = uniform;\n\n        uniformGroup.gl = gl;\n\n        Object.defineProperty(uniformGroup, name, {\n            get: generateGetter(name),\n            set: generateSetter(name, uniform)\n        });\n    }\n\n    return uniforms;\n};\n\nvar generateGetter = function(name)\n{\n    return function() {\n        return this.data[name].value;\n    };\n};\n\nvar GLSL_SINGLE_SETTERS = {\n    float: function setSingleFloat(gl, location, value) { gl.uniform1f(location, value); },\n    vec2: function setSingleVec2(gl, location, value) { gl.uniform2f(location, value[0], value[1]); },\n    vec3: function setSingleVec3(gl, location, value) { gl.uniform3f(location, value[0], value[1], value[2]); },\n    vec4: function setSingleVec4(gl, location, value) { gl.uniform4f(location, value[0], value[1], value[2], value[3]); },\n\n    int: function setSingleInt(gl, location, value) { gl.uniform1i(location, value); },\n    ivec2: function setSingleIvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\n    ivec3: function setSingleIvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\n    ivec4: function setSingleIvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\n\n    bool: function setSingleBool(gl, location, value) { gl.uniform1i(location, value); },\n    bvec2: function setSingleBvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\n    bvec3: function setSingleBvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\n    bvec4: function setSingleBvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\n\n    mat2: function setSingleMat2(gl, location, value) { gl.uniformMatrix2fv(location, false, value); },\n    mat3: function setSingleMat3(gl, location, value) { gl.uniformMatrix3fv(location, false, value); },\n    mat4: function setSingleMat4(gl, location, value) { gl.uniformMatrix4fv(location, false, value); },\n\n    sampler2D: function setSingleSampler2D(gl, location, value) { gl.uniform1i(location, value); },\n};\n\nvar GLSL_ARRAY_SETTERS = {\n    float: function setFloatArray(gl, location, value) { gl.uniform1fv(location, value); },\n    vec2: function setVec2Array(gl, location, value) { gl.uniform2fv(location, value); },\n    vec3: function setVec3Array(gl, location, value) { gl.uniform3fv(location, value); },\n    vec4: function setVec4Array(gl, location, value) { gl.uniform4fv(location, value); },\n    int: function setIntArray(gl, location, value) { gl.uniform1iv(location, value); },\n    ivec2: function setIvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\n    ivec3: function setIvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\n    ivec4: function setIvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\n    bool: function setBoolArray(gl, location, value) { gl.uniform1iv(location, value); },\n    bvec2: function setBvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\n    bvec3: function setBvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\n    bvec4: function setBvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\n    sampler2D: function setSampler2DArray(gl, location, value) { gl.uniform1iv(location, value); },\n};\n\nfunction generateSetter(name, uniform)\n{\n    return function(value) {\n        this.data[name].value = value;\n        var location = this.data[name].location;\n        if (uniform.size === 1)\n        {\n            GLSL_SINGLE_SETTERS[uniform.type](this.gl, location, value);\n        }\n        else\n        {\n            // glslSetArray(gl, location, type, value) {\n            GLSL_ARRAY_SETTERS[uniform.type](this.gl, location, value);\n        }\n    };\n}\n\nfunction getUniformGroup(nameTokens, uniform)\n{\n    var cur = uniform;\n\n    for (var i = 0; i < nameTokens.length - 1; i++)\n    {\n        var o = cur[nameTokens[i]] || {data:{}};\n        cur[nameTokens[i]] = o;\n        cur = o;\n    }\n\n    return cur;\n}\n\n\nmodule.exports = generateUniformAccessObject;\n","module.exports = {\n    compileProgram: require('./compileProgram'),\n    defaultValue: require('./defaultValue'),\n    extractAttributes: require('./extractAttributes'),\n    extractUniforms: require('./extractUniforms'),\n    generateUniformAccessObject: require('./generateUniformAccessObject'),\n    setPrecision: require('./setPrecision'),\n    mapSize: require('./mapSize'),\n    mapType: require('./mapType')\n};","/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String}\n * @return {Number}\n */\nvar mapSize = function(type) \n{ \n    return GLSL_TO_SIZE[type];\n};\n\n\nvar GLSL_TO_SIZE = {\n    'float':    1,\n    'vec2':     2,\n    'vec3':     3,\n    'vec4':     4,\n\n    'int':      1,\n    'ivec2':    2,\n    'ivec3':    3,\n    'ivec4':    4,\n\n    'bool':     1,\n    'bvec2':    2,\n    'bvec3':    3,\n    'bvec4':    4,\n\n    'mat2':     4,\n    'mat3':     9,\n    'mat4':     16,\n\n    'sampler2D':  1\n};\n\nmodule.exports = mapSize;\n","\n\nvar mapType = function(gl, type) \n{\n    if(!GL_TABLE) \n    {\n        var typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for(var i = 0; i < typeNames.length; ++i) \n        {\n            var tn = typeNames[i];\n            GL_TABLE[ gl[tn] ] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n  return GL_TABLE[type];\n};\n\nvar GL_TABLE = null;\n\nvar GL_TO_GLSL_TYPES = {\n  'FLOAT':       'float',\n  'FLOAT_VEC2':  'vec2',\n  'FLOAT_VEC3':  'vec3',\n  'FLOAT_VEC4':  'vec4',\n\n  'INT':         'int',\n  'INT_VEC2':    'ivec2',\n  'INT_VEC3':    'ivec3',\n  'INT_VEC4':    'ivec4',\n  \n  'BOOL':        'bool',\n  'BOOL_VEC2':   'bvec2',\n  'BOOL_VEC3':   'bvec3',\n  'BOOL_VEC4':   'bvec4',\n  \n  'FLOAT_MAT2':  'mat2',\n  'FLOAT_MAT3':  'mat3',\n  'FLOAT_MAT4':  'mat4',\n  \n  'SAMPLER_2D':  'sampler2D'  \n};\n\nmodule.exports = mapType;\n","/**\n * Sets the float precision on the shader. If the precision is already present this function will do nothing\n * @param {string} src       the shader source\n * @param {string} precision The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n *\n * @return {string} modified shader source\n */\nvar setPrecision = function(src, precision)\n{\n    if(src.substring(0, 9) !== 'precision')\n    {\n        return 'precision ' + precision + ' float;\\n' + src;\n    }\n\n    return src;\n};\n\nmodule.exports = setPrecision;\n"],"sourceRoot":""}